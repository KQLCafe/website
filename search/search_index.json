{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to KQL Cafe","text":""},{"location":"#our-mission","title":"Our Mission","text":"<ul> <li>A Community to make the world a better place with KQL</li> <li>Learn, share and practice the KQL language</li> </ul>"},{"location":"#what-is-kql-cafe","title":"What is KQL Cafe?","text":"<p>KQL Cafe is a community-driven event series focused on Kusto Query Language (KQL), which is used primarily in Microsoft technologies like Azure Data Explorer, Microsoft Sentinel, Defender XDR and Microsoft Intune for querying and analyzing large volumes of data.</p> <p>The \"Cafe\" concept gives it a casual, community-friendly vibe \u2014 like a meet-up over coffee, but for learning and sharing knowledge around KQL. Our sessions typically feature:</p> <ul> <li>Expert talks and guest speakers</li> <li>Real-world use cases and demos</li> <li>Interactive Q&amp;A sessions</li> <li>Tips and tricks for writing and optimizing KQL queries</li> </ul>"},{"location":"#follow-us","title":"Follow us","text":"<ul> <li>Follow us on BlueSky</li> <li>Follow us on Twitter</li> <li>Join our KQLCafe Meetups</li> <li>Join our group on LinkedIn</li> <li>Watch the KQL Cafe session videos on YouTube</li> </ul> <p>Code of Conduct</p>"},{"location":"#show-hosts","title":"Show hosts","text":"<ul> <li>Gianni Castaldi</li> <li>Alex Verboon</li> </ul>"},{"location":"#community-contributions","title":"Community Contributions","text":"<p>If you'd like to share your query with the community, feel free to share it via kqlsearch.com Submit Query</p>"},{"location":"#registration","title":"Registration","text":"<ul> <li>All Events</li> </ul>"},{"location":"#upcoming-shows","title":"Upcoming Shows","text":"Date Time Registration Guest Speaker October 27,2025 6pm - 7:30pm Meetup Yoan Schinck November 6,2025 All Day KustoCon 2025 Speakers November 24,2025 6pm - 7:30pm (TBA) Daniel Mozes January 27,2026 6pm - 7:30pm (TBA) Simon Scharschinger February 17,2026 6pm - 7:30pm (TBA) Michael Crane March 17th, 2026 6pm - 7:30pm (TBA) Laurie Rhodes <p>We start at 6pm Amsterdam/Zurich CET</p> <p>Sydney, 4 AM (Next Day), Perth, 1 AM (Next Day), Kuala Lumpur, 1 AM (Next Day), Mumbai, 10:30 PM, Tel-Aviv, 8 PM, Johannesburg, 7 PM, Rio de Janeiro, 2 PM, New York, 12 PM, Toronto, 12 PM, Houston, 11 AM, Seattle, 9 AM</p>"},{"location":"#past-shows","title":"Past Shows","text":""},{"location":"#2025","title":"2025","text":"Date Show Notes Recording Guest Speaker January 28,2025 January 2025 YouTube Ian Hanley February 25,2025 February 2025 YouTube Uri Barash March 18,2025 March 2025 YouTube Sergio Albea April 29,2025 April 2025 YouTube Bert-Jan May 27,2025 May 2025 Youtube Michalis Michalos &amp; Christos Galanopoulos June 23,2025 June 2025 Youtube Thomas Naunheim"},{"location":"#2024","title":"2024","text":"Date Show Notes Recording Guest Speaker January 30,2024 January 2024 YouTube Ilana Waitser and Elyran Malka Febaruary 27,2024 February 2024 YouTube Fabian Bader March 26,2024 March 2024 Youtube Purav Desai April 30, 2024 April 2024 Youtube Henning Rauch May 28,2024 May 2024 Youtube Nicola Suter June 25 2024 June 2024 YouTube Michalis Michalos August 20 2024 August 2024 YouTube Truvis Thornton October 29 2024 October 2024 Youtube Koos Goosens November 26 2024 November 2024 Youtube Mehmet Ergene"},{"location":"#2023","title":"2023","text":"Date Show Notes Recording Guest Speaker January 31,2023 January 2023 YouTube Rogier Dijkman February 28,2023 February 2023 YouTube Ugur Koc April 4,2023 April 2023 YouTube Alexander Sloutsky April 25,2023 April 2023 YouTube Thijs Leconte May 23 May 2023 YouTube Clive Watson June 27 June 2023 YouTube Gianni &amp; Alex September 19 September 2023 YouTube Brian B\u00f8nk October 31 October 2023 YouTube Morten Knudsen November 28 November 2023 YouTube Ugur Koc"},{"location":"#2022","title":"2022","text":"Date Show Notes Recording Guest Speaker January 25,2022 Hello KQL YouTube Rod Trent February  22,2022 Hello from Down Under YouTube Matt Zorich March 22,2022 KQL Workbooks YouTube Matthew Lowe April 26, 2022 Detections YouTube Olaf Hartong May 31, 2022 Scan Operator YouTube Mehmet Ergene June 28,2022 KQL Cafe June 22 YouTube No guest speaker August 30 KQL Cafe August 29 YouTube Ashwin Patil September 27 KQL Cafe September 27 YouTube Mattias Borg October 25 KQL Cafe October 25 YouTube Jan Ketil Skanke November 29 KQL Cafe November 29 YouTube BertJanCyber"},{"location":"Code%20of%20Cnoduct/","title":"Code of Conduct","text":"<p>All group members should follow Throughout each interaction:</p> <p>Be friendly and welcoming Listen with purpose and create space for others\u2019 communication preferences. Ask yourself how you can make someone life easier. Be patient Remember that people have varying communication styles and preferences. Recognize that not everyone is using their native language. Meaning and tone can be lost in translation. Be thoughtful Think about how others will interpret your words. Aim for clear and productive communication. Remember that sometimes it is best to refrain from commenting. Be respectful and inclusive Respect differences of opinion. Seek to understand and build bridges, not condemn or criticize. Make a conscious effort to include people who differ from you. Be open and curious Assume good intent and interpret others\u2019 statements or questions in good faith. Ask questions to understand, not denounce. Focus on continuous learning. Improve upon the things you already know, tackle new things, and ask others about their expertise to deepen your own knowledge. Summary Treat everyone with respect, kindness, and empathy. Use welcoming and inclusive language. Be thoughtful in how you communicate in person and online. Don\u2019t be destructive or inflammatory. Gracefully accept constructive criticism. Listen with purpose and create space for others\u2019 communication preferences. Reach out to the organizers if you need anything.</p>"},{"location":"KustoCon/KustoCon%202024/","title":"KustoCon 2024","text":"<p>KustoCon 2024 was kicking off for the first time online on November 8th, 2024. The perfect event for anyone interested in learning, sharing, and getting hands-on with Kusto Query Language (KQL), which is used across a various of Microsoft technologies. All sessions presented by by well-known pros from the KQL community.</p> <p>Conference Organizers Alex Verboon , Gianni Castaldi and Frans Oudendorp</p>"},{"location":"KustoCon/KustoCon%202024/#welcome-what-is-kql-and-why-you-should-learn-it","title":"Welcome &amp; What is KQL and Why you should learn it","text":"<p>Alex Verboon &amp; Gianni Castaldi</p> <p></p>"},{"location":"KustoCon/KustoCon%202024/#anchored-in-innovation-the-story-of-kusto","title":"Anchored in Innovation - The Story of Kusto","text":"<p>Henning Rauch</p> <p></p>"},{"location":"KustoCon/KustoCon%202024/#threat-hunting-with-kusto","title":"Threat Hunting with Kusto","text":"<p>Mattias Borg</p> <p></p>"},{"location":"KustoCon/KustoCon%202024/#find-lateral-movement-paths-using-kql-graph-semantics","title":"Find lateral movement paths using KQL Graph semantics","text":"<p>Fabian Bader</p> <p></p>"},{"location":"KustoCon/KustoCon%202024/#the-kusto-approach-to-unified-audit-log","title":"The Kusto Approach to Unified Audit Log","text":"<p>Bert-Jan Pals</p> <p></p>"},{"location":"KustoCon/KustoCon%202024/#detection-engineering-setbacks-and-some-rabbit-holes","title":"Detection engineering setbacks .. and some rabbit holes","text":"<p>Olaf Hartong</p> <p></p>"},{"location":"KustoCon/KustoCon%202025/","title":"KustoCon 2025","text":"<p>KustoCon will run on November 6th, 2025</p> <p>This year the KustoCon Conference will run in Hybrid Mode. With exclusive Workshops in the morning for those attending onsite and KustoCon sessions in the afternoon for both onsite and online participants.</p> <p>For more details see KustoCon.com</p> <p>Thanks to our sponsors</p> <p></p>"},{"location":"Learn%20KQL/LearnKQL/","title":"Learn &amp; Practice Kusto Query Language (KQL)","text":"<p>Below you find a few resources to start or improve your KQL skills.</p>"},{"location":"Learn%20KQL/LearnKQL/#kql-search","title":"KQL Search","text":"<p>KQLSearch.com is a community-driven search engine designed to help users find and share useful Kusto Query Language (KQL) snippets. It aggregates KQL queries from public sources like GitHub and documentation, making it easier to discover ready-made queries for Microsoft tools like Defender, Sentinel, Log Analytics, and Azure Data Explorer. It\u2019s especially useful for security analysts, engineers, and learners looking for inspiration or quick solutions.</p> <ul> <li>KQLSearch</li> </ul>"},{"location":"Learn%20KQL/LearnKQL/#the-definitive-guide-to-kql-using-kusto-query-language-for-operations-defending-and-threat-hunting","title":"The Definitive Guide to KQL: Using Kusto Query Language for operations, defending, and threat hunting","text":"<ul> <li>Order here</li> <li>GitHub</li> </ul>"},{"location":"Learn%20KQL/LearnKQL/#azure-data-explorer-free-cluster","title":"Azure Data Explorer Free Cluster","text":"<p>The Azure Data Explorer free cluster is a no-cost, fully managed environment designed to help users learn and explore Kusto Query Language (KQL). It provides a quick and easy way to run queries, ingest sample data, and experiment with powerful analytics features\u2014without needing to set up or pay for infrastructure. Ideal for beginners and learners, it supports hands-on practice for scenarios like log analytics, telemetry analysis, and interactive data exploration.</p> <p>free Azure Data Explorer cluster</p>"},{"location":"Learn%20KQL/LearnKQL/#kusto-detective-agency","title":"Kusto Detective Agency","text":"<p>The Kusto Detective Agency is an interactive mystery-solving challenge that teaches Kusto Query Language (KQL) through fun, data-driven investigations.</p> <ul> <li>Kusto Detective Agency</li> </ul>"},{"location":"Learn%20KQL/LearnKQL/#mut-learn-kql","title":"Mut Learn KQL","text":"<ul> <li>GitHub</li> <li>Must Learn KQL - the Book</li> <li>The KQL Mysteries</li> <li>YouTube</li> </ul>"},{"location":"Learn%20KQL/LearnKQL/#blue-raven-academy","title":"Blue Raven Academy","text":"<p>Elevate your threat hunting, detection engineering, and incident response skills with our transformative training courses, offering hands-on experience in a hyper-realistic lab environment!</p> <p>Blue Raven Academy provides FREE and Paid KQL Training Courses</p> <ul> <li>Blue Raven Academy</li> </ul>"},{"location":"Learn%20KQL/LearnKQL/#ten-minute-kql","title":"Ten Minute KQL","text":"<p>Learn Kusto Query Language (KQL) from zero experience to an advanced level in 10-minute sessions.</p> <ul> <li>YouTube</li> </ul>"},{"location":"Learn%20KQL/LearnKQL/#kql-cafe","title":"KQL Cafe","text":"<ul> <li>YouTube</li> </ul>"},{"location":"Learn%20KQL/LearnKQL/#microsoft-learn","title":"Microsoft Learn","text":"<ul> <li>Kusto Query Language overview</li> <li>Find KQL related training on Microsoft Learn</li> </ul>"},{"location":"shownotes/KQL%20Cafe%20-%20ShowNotes%20Template/","title":"KQL Cafe - Month Year","text":""},{"location":"shownotes/KQL%20Cafe%20-%20ShowNotes%20Template/#recording","title":"Recording","text":"<ul> <li>Recording</li> </ul>"},{"location":"shownotes/KQL%20Cafe%20-%20ShowNotes%20Template/#hosts","title":"Hosts","text":"<ul> <li>Gianni</li> <li>Alex</li> </ul>"},{"location":"shownotes/KQL%20Cafe%20-%20ShowNotes%20Template/#guests","title":"Guests","text":"<ul> <li>Name</li> </ul>"},{"location":"shownotes/KQL%20Cafe%20-%20ShowNotes%20Template/#kql-news","title":"KQL News","text":""},{"location":"shownotes/KQL%20Cafe%20-%20ShowNotes%20Template/#guest","title":"Guest","text":""},{"location":"shownotes/KQL%20Cafe%20-%20ShowNotes%20Template/#learn-kql","title":"Learn KQL","text":""},{"location":"shownotes/KQL%20Cafe%20-%20ShowNotes%20Template/#what-did-you-do-with-kql-this-month","title":"What did you do with KQL this month?","text":""},{"location":"shownotes/2022/KQL%20Cafe%20-%20%20January%202022/","title":"Hello KQL","text":"<p>Date: 25. January 2022</p> <p>Hosts - Gianni - Alex</p> <p>Guest - @rodtrent</p> <p>Show Content - Show Presentation - Show Recording</p> <p></p> <p>This was the very first show of the KQL Cafe. where we first shared our mission with the community and explained how we plan to run the show. </p>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20%20January%202022/#our-mission-for-kql-cafe","title":"Our Mission for KQL Cafe","text":"<ul> <li>A Community to make the world a better place with KQL</li> <li>Learn, share and practice the KQL language </li> </ul>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20%20January%202022/#agenda","title":"Agenda","text":"<ul> <li>Where do we KQL?</li> <li>Your Playground Options</li> <li>KQL Basics | Top 8 Operators</li> <li>KQL Tables | How to find new things</li> <li>Working with IOCs</li> <li>Features worth mentioning</li> <li>Todays guest speaker: Rod Trent</li> <li>What did you do with KQL this month?</li> <li>KQL Challenge of the month</li> </ul>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20%20January%202022/#where-do-we-kql","title":"Where do we KQL","text":"<p>Alex and Gianni provided an overview of the Microsoft Products where we can use KQL</p> <ul> <li>Microsoft 365 Defender</li> <li>Microsoft Sentinel</li> <li>Log Analytics </li> <li>Data Explorer</li> <li>Microsoft Endpoint Configuration Manager (CMPivot)</li> </ul>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20%20January%202022/#kql-playground-options","title":"KQL Playground options","text":"<p>If you don't have access to Azure, don't worry, you can learn KQL for free using the publicely available Log Analytics demo environment. </p>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20%20January%202022/#kql-basics","title":"KQL Basics","text":"<p>To get you started, Gianni provided an overview on the Top 8 KQL operators</p> <ul> <li>search</li> <li>project</li> <li>has &lt;&gt; contains</li> <li>distinct</li> <li>summarize</li> <li>extend</li> <li>take &lt;&gt; limit</li> <li>join</li> </ul> <p>The sample queries used by Gianni can be found here</p>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20%20January%202022/#kql-how-to-find-new-things","title":"KQL how to find new things","text":"<p>Alex provided some examples how to find new tables or attributes stored within Microsoft Sentinel or Microsoft Defender 365. No rocked sciense here, just look around, take a table of interest and first look at the attributes, then find out what data is in these tables. As an example take the the DeviceEvents table from Microsoft Defender for Endpoint and run the following KQL query to find all ActionTypes</p> <pre><code>DeviceEvents\n| Distinct ActionType\n</code></pre>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20%20January%202022/#working-with-iocs","title":"Working with IOCs","text":"<p>Gianni demonstrated a KQL query where he uses the externaldata operator to fetch ASN information from a file stored on GitHub and then uses that data to find possible matches within the AzureAD sign-in logs. </p> <p>You can find the query here</p>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20%20January%202022/#features-worth-mentioning","title":"Features worth mentioning","text":"<p>The Query Explorer in Log Analytics has been replaced by Azure QueryPacks, Alex basically explained what's described in the above referenced Tech Community Article. </p>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20%20January%202022/#todays-guest-speaker-rod-trent","title":"Todays guest speaker: Rod Trent","text":"<p>We were very pleased to have Rod Trent as our very first guest speaker. Rod Trent is a Senior Cloud Security Advocate @ Microsoft and he's as crazy about KQL as we are. </p> <p>Rod Trent talked with us about the importance of KQL and the impact it can make on your IT career. It's like with PowerShell, these day, when using any of the above mentioned technologies, you must learn KQL. In fact that's why Rod started the Must Learn KQL series</p> <p>And we're happy that Rod has made available the KQL Cafe Edition of the Must Learn KQL Coffee Mug that we will send to our upcomming guest speakers at the KQL Cafe show.</p> <p>Presentation</p> <ul> <li>Rod Trent blog: https://aka.ms/RodsBlog </li> <li>Must Learn KQL series: https://aka.ms/MustLearnKQL </li> <li>GitHub: https://github.com/rod-trent </li> <li>LinkedIn Profile: https://www.linkedin.com/in/rodtrent/ </li> <li>Twitter: https://twitter.com/rodtrent </li> </ul>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20%20January%202022/#what-did-you-do-with-kql-this-month","title":"What did you do with KQL this month?","text":"<p>In this part of the episode we invite the community to talk about what they did with KQL recently. To get things started, Alex demonstrated his query to pull Windows OS End of Service information from the Threat and Vulnerability tables in Microsoft Defender for Endpoint.  You can find the query here: MDE - EOS Windows versions</p> <p>Rod shared these links:</p> <ul> <li>Common Security Log Costs by Vendor: https://cda.ms/3HF</li> <li>Data Per Computer: https://cda.ms/3HG</li> <li>Data Per Syslog Server: https://cda.ms/3HH</li> </ul>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20%20January%202022/#kql-challenge-of-the-month","title":"KQL Challenge of the month","text":"<p>For this month the KQL challenge of the month is about IOCs. Try creating a query that uses IOC data stored in a watchlist or use the external data operator and then join the data with your Sign-in logs, DeviceNetworkEvents or any other data you have in your or in the public Log Analytics workspace. </p> <p>Feel free to submit your query prior the next show. </p> <p>To get you started, below is an example from Gianni. </p> <p><pre><code>let List = (externaldata(Netblock:string, Company:string, Count:int) [@\"https://raw.githubusercontent.com/KustoKing/SentinelWatchlists/main/ASN-of-CloudProviders.csv\"] with (ignoreFirstRecord=true, format=\"SCsv\"));\nSigninLogs\n| where ResultType in(0, 50125, 50140, 70043, 70044)\n| evaluate ipv4_lookup(List, IPAddress, Netblock)\n| project-reorder TimeGenerated, Identity, UserPrincipalName, ClientAppUsed, AppDisplayName, IPAddress, Company, DeviceDetail \n\nlet List = (externaldata(Netblock:string, Company:string, Count:int) [@\"https://raw.githubusercontent.com/KustoKing/SentinelWatchlists/main/ASN-of-CloudProviders.csv\"] with (ignoreFirstRecord=true, format=\"SCsv\"));\nOfficeActivity\n| evaluate ipv4_lookup(List, ClientIP, Netblock)\n| project-reorder TimeGenerated\n</code></pre> query</p>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20%20January%202022/#references","title":"References:","text":"<ul> <li>SQL to KQL cheat sheet: https://aka.ms/SQL2KQL </li> <li>Must Learn KQL:  https://aka.ms/MustLearnKQL</li> <li>KQL Playground: https://aka.ms/LADemo </li> <li>The \u201cmerch\u201d store:  https://cda.ms/3Dy </li> <li>The tie fighter KQL query:  https://cda.ms/3HD</li> </ul>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20April%202022/","title":"KQL Detections - Time","text":"<p>Date: 22. April 2022</p> <p>Hosts</p> <ul> <li>Gianni</li> <li>Alex</li> </ul> <p>Guest</p> <ul> <li>Olaf Hartong</li> </ul> <p>Show Content</p> <ul> <li>Show Presentation</li> <li></li> </ul> <p>Topics:</p> <ul> <li>0:00 Welcome to KQL Cafe + Poll</li> <li>What's new in KQL:</li> <li>3:16 Microsoft 365 Defender Connector</li> <li>8:31 Extend Columns Microsoft Sentinel</li> <li>Working with IOCs:</li> <li>10:18 BlackCat Ransomware IoC</li> <li>Learning KQL:</li> <li>16:18 mv-expand</li> <li>KQL Tools:</li> <li>25:06 Get PowerShell cmdlets from a PowerShell module</li> <li>Our KQL Guest:</li> <li>26:58 Olaf Hartong KQL detection times</li> <li>What did you do with KQL this month?</li> <li>1:15:05 Defender Threat and Vulnerability Management</li> <li>1:18:06 Microsoft Sentinel Connector Health</li> </ul>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20April%202022/#agenda","title":"Agenda","text":"<ul> <li>Hello again</li> <li>What's new in KQL</li> <li>IOCs</li> <li>Learn KQL</li> <li>KQL Tools</li> <li>Todays guest speaker: Olaf Hartong</li> <li>What did you do with KQL this month?</li> <li>KQL Challenge of the month</li> </ul>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20April%202022/#whats-new-in-kql","title":"What's new in KQL","text":""},{"location":"shownotes/2022/KQL%20Cafe%20-%20April%202022/#microsoft-365-defender-connector-in-microsoft-sentinel","title":"Microsoft 365 Defender Connector in Microsoft Sentinel","text":"<p>Additional tables can now be ingested the from Microsoft 365 Defender Connector into Microsoft Sentinel.</p> <ul> <li>Microsoft Defender for Identity</li> <li>IdentityLogonEvents</li> <li>IdentityQueryEvents</li> <li>IdentityDirectoryEvents</li> <li>MIcrosoft Defender for Cloud Apps</li> <li>CloudAppEvents</li> <li>Microsoft 365 Defender</li> <li>AlertEvidence</li> </ul>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20April%202022/#iocs","title":"IOCs","text":"<ul> <li>FBI Releases IOCs Associated with BlackCat/ALPHV Ransomware</li> </ul>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20April%202022/#learn-kql","title":"Learn KQL","text":"<pre><code>//Expand JSON\nSecurityAlert\n| where TimeGenerated &gt; ago(30d)\n| where ProviderName == \"MDATP\"\n| extend ParsedEnties = parse_json(Entities)\n| mv-expand ParsedEnties\n| where ParsedEnties contains \"MdatpDeviceId\"\n| extend DeviceID = tostring(ParsedEnties.MdatpDeviceId)\n</code></pre> <pre><code>SecurityAlert\n| where TimeGenerated &gt; ago(30d)\n| where ProviderName == \"MDATP\"\n| extend ParsedEnties = parse_json(Entities)\n| mv-expand todynamic(ParsedEnties)\n| extend DeviceID = ParsedEnties.MdatpDeviceId\n</code></pre> <pre><code>//Expand Series\nlet lookBack_long = 30d;\nlet TimeFrame = 3h;\nSigninLogs\n| where TimeGenerated &gt; ago(lookBack_long)\n| make-series SignIn = count() on TimeGenerated in range(startofday(ago(lookBack_long)),now(), TimeFrame) by UserPrincipalName\n| extend (AnomaliesDetected, AnomaliesScore, AnomaliesBaseline) = series_decompose_anomalies(SignIn, 3, -1, 'linefit')\n| mv-expand TimeGenerated, AnomaliesScore, SignIn, AnomaliesDetected, AnomaliesScore, AnomaliesBaseline\n| where SignIn &gt; 5\n</code></pre> <pre><code>//Expand List\nSigninLogs\n| where TimeGenerated &gt; ago(7d)\n| summarize make_list(UserPrincipalName)\n| mv-expand list_UserPrincipalName\n</code></pre>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20April%202022/#kql-tools","title":"KQL Tools","text":""},{"location":"shownotes/2022/KQL%20Cafe%20-%20April%202022/#generate-a-kql-query-that-includes-powershell-cmdlets-from-a-specific-module","title":"Generate a KQL query that includes PowerShell cmdlets from a specific Module","text":"<pre><code>function New-KQPSModuleFunctions\n{\n&lt;#\n.Synopsis\n   New-KQPSModulecmdlets\n.DESCRIPTION\n   New-KQPSModulecmdlets creates kusto query to search for PowerShell commands\n   included in the specified PowerShell module name\n.PARAMETER ModuleName\n    The name of the PowerShell module\n\n.PARAMETER ImportPsd\n    The path to the PowerShell module psd file\n\n.PARAMETER Path\n    The path where the generated kql query is saved\n\n.EXAMPLE\n    New-KQPSModuleFunctions -ImportPsd C:\\temp\\powersploit.psd1 \n\n    This command creates a kql query including all functions included in the Powersploit \n    module and saves the query to the clipboard\n\n.EXAMPLE\n    New-KQPSModuleFunctions -ImportPsd C:\\temp\\powersploit.psd1 -Path C:\\Temp\n\n    This command creates a kql query including all functions included in the powersploit \n    module and saves the query to c:\\temp\\ps_powersploit.kql\n\n.EXAMPLE\n    New-KQPSModuleFunctions -ModuleName netsecurity\n\n    This command creates a kql query including all functions included in the netsecurity \n    module and saves the query to the clipboard\n\n.EXAMPLE\n    New-KQPSModuleFunctions -ModuleName netsecurity -Path c:\\temp\n\n    This command creates a kql query including all functions included in the netsecurity \n    module and saves the query to c:\\temp\\ps_netsecurity.kql\n\n.NOTES\n    Author: Alex Verboon\n    Date: 11.07.2020\n    Version 1.0\n#&gt;\n    [CmdletBinding()]\n    Param\n    (\n        # PowerShell Module\n        [Parameter(ParameterSetName='Module',Mandatory=$true)]\n        $ModuleName,\n        # The path to the PowerShell module psd1 file\n        [Parameter(ParameterSetName='Import',mandatory=$true)]\n        $ImportPsd,\n         # The path where the kql query is saved\n        [Parameter(mandatory=$false)]\n        $Path\n    )\n\n    Begin{}\n    Process\n    {\n    If ($ImportPsd){\n        $psdcontent = Import-PowerShellDataFile -Path $ImportPsd\n        $PsCmds = ($psdcontent.FunctionsToExport) -join '\",\"' \n        $ModuleVersion = $psdcontent.ModuleVersion\n        $ModuleName = (Split-Path $ImportPsd -Leaf).Split(\".\")[0]\n    }\n    Else{\n        if (-not (Get-Module -ListAvailable -Name $ModuleName)){\n        Write-Error \"Specified Module $ModuleName not found\"\n        break} \n        $PsCmds = (get-command -Module \"$ModuleName\").Name -join '\",\"' \n        $ModuleInfo = Get-Module -Name \"$ModuleName\"\n        $ModuleVersion = $ModuleInfo.Version\n    }\n    $let = 'let pscommands = dynamic ([' + '\"' + $PsCmds + '\"' + ']);'\n$kqlquery = @\"\n// Search for PowerShell commands included in the PowerShell module: $ModuleName Version:$ModuleVersion)\n$let\nDeviceEvents\n| where ActionType contains \"PowerShellCommand\"\n| where AdditionalFields has_any (pscommands)\n\"@\n    }\n    End{\n        If($Path){\n        If (Test-Path $Path){\n            Write-Output \"Saving KQL query to $path\\kql_$ModuleName.kql\"\n            Set-Content -Path \"$path\\ps_$ModuleName.kql\" -Value $kqlquery -Force\n            }\n        }\n        Else{\n            Write-Output \"KQL query saved to clipboard\"\n            $kqlquery | clip\n        }\n   }\n}\n</code></pre>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20April%202022/#guest-speaker-olaf-hartong","title":"Guest Speaker Olaf Hartong","text":"<p>This month our guest speaker was Olaf Hartong.</p> <p>A blog post will be published soon.</p>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20April%202022/#what-did-you-do-with-kql-this-month","title":"What did you do with KQL this month?","text":""},{"location":"shownotes/2022/KQL%20Cafe%20-%20April%202022/#defender-for-endpoint-software-vulnerabilities","title":"Defender for Endpoint - Software Vulnerabilities","text":"<pre><code>// Software Vulnerability Overview\nDeviceTvmSoftwareVulnerabilities\n| summarize make_list(VulnerabilitySeverityLevel), make_set(DeviceId), make_set(CveId), make_set(SoftwareVersion) \n    , Critical = make_set_if(CveId, VulnerabilitySeverityLevel == 'Critical'),\n    High = make_set_if(CveId, VulnerabilitySeverityLevel == 'High'),\n    Medium = make_set_if(CveId, VulnerabilitySeverityLevel == 'Medium'),\n    Low = make_set_if(CveId, VulnerabilitySeverityLevel == 'Low')\n    by SoftwareName, SoftwareVendor\n| extend ExposedDevices = array_length(set_DeviceId)\n| extend TotalVulnerabilities = array_length(set_CveId)\n| extend VersionDistribution = array_length(set_SoftwareVersion)\n| extend Critical = array_length(Critical)\n| extend High = array_length(High)\n| extend Medium = array_length(Medium)\n| extend Low = array_length(Low)\n| project SoftwareVendor, SoftwareName, ExposedDevices, TotalVulnerabilities, Critical, High, Medium, Low\n</code></pre>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20April%202022/#connector-health","title":"Connector Health","text":"<pre><code>let connectortable = datatable (Connector: string, LogTable: string) [\n    \"Azure Active Directory\", \"SigninLogs\",\n    \"Azure Active Diretory\", \"AuditLogs\",\n    \"Azure Active Directory\", \"AADManagedIdentitySignInLogs\",\n    \"Azure Active Directory\", \"AADServicePrincipalSignInLogs\",\n    \"Azure Active Directory\", \"AADNonInteractiveUserSignInLogs\",\n    \"Azure Active Directory\", \"AADProvisioningLogs\",\n    \"Sentinel\", \"ThreatIntelligenceIndicator\",\n    \"Office 365\", \"OfficeActivity\",\n    \"Azure\", \"AzureActivity\",\n    \"Microsoft Defender for Endpoint\", \"DeviceLogonEvents\",\n    \"Microsoft Defender for Endpoint\", \"DeviceProcessEvents\",\n    \"Microsoft Defender for Endpoint\", \"DeviceRegistryEvents\",\n    \"Microsoft Defender for Endpoint\", \"DeviceInfo\",\n    \"Microsoft Defender for Endpoint\", \"DeviceFileEvents\",\n    \"Microsoft Defender for Endpoint\", \"DeviceNetworkEvents\",\n    \"Microsoft Defender for Endpoint\", \"DeviceNetworkInfo\",\n    \"Microsoft Defender for Endpoint\", \"DeviceImageLoadEvents\",\n    \"Microsoft Defender for Endpoint\", \"DeviceEvents\",\n    \"Microsoft Defender for Endpoint\", \"DeviceFileCertificateInfo\",\n    \"Microsoft Defender for Cloud Apps\", \"CloudAppEvents\",\n    \"Microsoft Defender for Cloud Apps\", \"McasShadowItReporting\",\n    \"Microsoft Defender for Office 365\", \"EmailEvents\",\n    \"Microsoft Defender for Office 365\", \"EmailAttachmentInfo\",\n    \"Microsoft Defender for Office 365\", \"EmailUrlInfo\",\n    \"Microsoft Defender for Office 365\", \"EmailPostDeliveryEvents\",\n    \"Microsoft Defender for Identity\", \"IdentityLogonEvents\",\n    \"Microsoft Defender for Identity\", \"IdentityQueryEvents\",\n    \"Microsoft Defender for Identity\", \"IdentityDirectoryEvents\",\n    \"Microsoft Defender for Identity\",\"Azure Advanced Threat Protection\",\n    \"Azure Firewall\",\"AZUREFIREWALLS\",\n    \"Azure Key Vault\",\"VAULTS\",\n    \"Azure Web Application Firewall (WAF)\",\"APPLICATIONGATEWAYS\"\n];\nunion \n// Defender for Endpoint\nDeviceEvents, DeviceFileEvents, DeviceProcessEvents, DeviceRegistryEvents, DeviceImageLoadEvents,DeviceNetworkEvents, DeviceNetworkInfo, DeviceLogonEvents, DeviceInfo, DeviceFileCertificateInfo,\n// Azure AD\nSigninLogs,AuditLogs, AADNonInteractiveUserSignInLogs, AADServicePrincipalSignInLogs, AADManagedIdentitySignInLogs,\n// Azure\nAzureActivity,\n// Defender for Identity\nIdentityDirectoryEvents, IdentityLogonEvents, IdentityQueryEvents,\n// Microsoft Defender for Cloud Apps\nCloudAppEvents, // McasShadowItReporting\n// Defender for Office 365\nEmailEvents, EmailAttachmentInfo, EmailUrlInfo, EmailPostDeliveryEvents, \n// Office 365\nOfficeActivity,\n// Sentinel\nThreatIntelligenceIndicator,\n// Azure Firewall\nAzureDiagnostics\n| summarize\n    Entries = count(),\n    last_log_minute = datetime_diff(\"minute\", now(), max(TimeGenerated)),\n    last_log_hours = datetime_diff(\"hour\", now(), max(TimeGenerated)),\n    last_log_days = datetime_diff(\"day\", now(), max(TimeGenerated)),\n    last_logdate = max(TimeGenerated) by Type, ResourceType\n    | project ['TableName'] = Type,\n    ['Table Entries'] = Entries,\n    ['Last Record Minutes'] =  last_log_minute,\n    ['Last Record Hours'] =  last_log_hours,\n    ['Last Record Days'] =  last_log_days,\n    last_logdate, ResourceType \n| order by ['Last Record Minutes']  desc\n| join kind=leftouter connectortable\n    on $left.['TableName'] == $right.LogTable \n| join kind=leftouter connectortable\n    on $left.ResourceType == $right. LogTable\n| extend Connector = strcat(Connector, Connector1)\n| where isnotempty( Connector)\n| project last_logdate,Connector, ['TableName'], ['Table Entries'], ['Last Record Minutes'], ['Last Record Hours'], ['Last Record Days'] //, ResourceType\n//| where ['Last Record Days'] &gt; 0\n| where ['Last Record Hours'] &gt; 4\n</code></pre>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20August%202022/","title":"KQL Cafe August 2022","text":"<p>Date: 30. August 2022</p> <p>Hosts</p> <ul> <li>Gianni</li> <li>Alex</li> </ul> <p>Guest</p> <ul> <li>Ashwin Patil</li> </ul> <p>Show Content</p> <ul> <li></li> </ul>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20August%202022/#agenda","title":"Agenda","text":"<pre><code>0:00 Welcome to KQL Cafe\nWhat's new in KQL:\n1:37 Sentinel Data Retention, Archive and Restore\n14:03 Guided Hunting in Microsoft 365 Defender\nWorking with IOCs:\n17:10 ASN in SigninLogs\nLearning KQL:\n20:21 parse-kv\n32:17 Microsoft Learn\nOur KQL Guest:\n32:48 Ashwin Patil - Blue teaming with KQL\nWhat did you do with KQL this month?\n1:16:32 Watchlists and IP Ranges\n1:22:58 Azure Threat Matrix \n1:27:30 ASIM Parsers\n</code></pre>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20August%202022/#show-content-references","title":"Show content references","text":""},{"location":"shownotes/2022/KQL%20Cafe%20-%20August%202022/#sentinel-data-ingestion-retetnion-archiving","title":"Sentinel Data Ingestion, Retetnion, Archiving","text":"<p>During our last show we briefly touched on Data Ingestion, retention, archive and restore, if you're interested in the details, I recommend watching the following videos and content</p> <p>Leverage new and existing features to optimize cost in Microsoft Sentinel Manage Your Log Lifecycle with New Methods for Ingestion, Archival, Search, and Restoration</p> <p>More videos and slides available on the Secuirty Webinars page</p>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20August%202022/#guided-hunting-in-microsoft-365-defender","title":"Guided Hunting in Microsoft 365 Defender","text":"<p>Hunt in Microsoft 365 Defender without KQL! Build hunting queries using guided mode in Microsoft 365 Defender</p>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20August%202022/#the-parse-kv-operator","title":"The parse-kv operator","text":"<pre><code>Syslog\n| where SyslogMessage has \"duration\"\n| where TimeGenerated between (startofday(datetime(\"20220701\")) .. endofday(datetime(\"20220701\")))\n| take 10\n| project SyslogMessage\n</code></pre> <pre><code>// Lets get the Duration, Send Bytes and Received bytes (The slow way 'extract')\nSyslog\n| where TimeGenerated between (startofday(datetime(\"20220501\")) .. endofday(datetime(\"20220901\")))\n| extend NetworkDuration = extract(@'\\sduration=\"(\\d+)\"', 1, SyslogMessage)\n| extend Send = extract(@'\\ssent_bytes=\"(\\d+)\"', 1, SyslogMessage)\n| extend Received = extract(@'\\srcvd_bytes=\"(\\d+)\"', 1, SyslogMessage)\n| where isnotempty(NetworkDuration)\n</code></pre> <pre><code>// The faster way (parse)\nSyslog\n| where TimeGenerated between (startofday(datetime(\"20220501\")) .. endofday(datetime(\"20220901\")))\n| parse SyslogMessage with * @'duration=\"' NetworkDuration '\" sent_bytes=\"' Send '\" rcvd_bytes=\"' Received '\"' *\n| where isnotempty(NetworkDuration)\n</code></pre> <pre><code>// The Next Generation way (parse-kv)\nSyslog\n| where TimeGenerated between (startofday(datetime(\"20220501\")) .. endofday(datetime(\"20220901\")))\n| parse-kv SyslogMessage as (duration:int\n    , sent_bytes:long \n    , rcvd_bytes:long) with (pair_delimiter=' ', kv_delimiter='=', quote='\"')\n</code></pre> <pre><code>// Now lets rename the columns (parse-kv)\nSyslog\n| where TimeGenerated between (startofday(datetime(\"20220501\")) .. endofday(datetime(\"20220901\")))\n| parse-kv SyslogMessage as (duration:int\n    , sent_bytes:long \n    , rcvd_bytes:long) with (pair_delimiter=' ', kv_delimiter='=', quote='\"')    \n| project-rename NetworkDuration = duration\n    , SrcBytes = sent_bytes\n    , DstBytes = rcvd_bytes\n| where isnotempty(NetworkDuration)\n</code></pre> <pre><code>// And now all posible ways (parse-kv)\nSyslog\n| where TimeGenerated between (startofday(datetime(\"20220501\")) .. endofday(datetime(\"20220901\")))\n| parse-kv SyslogMessage as (geo_src:string\n    , geo_dst:string\n    , src_user:string\n    , dst_user:string\n    , duration:int\n    , sent_bytes:long\n    , rcvd_bytes:long\n    , msg_id:string\n    , fqdn_src_match:string\n    , fqdn_dst_match:string) with (pair_delimiter=' ', kv_delimiter='=', quote='\"')\n| project-rename SrcGeoCountry = geo_src\n    , DstGeoCountry = geo_dst\n    , SrcUsername = src_user\n    , DstUsername = dst_user\n    , NetworkDuration = duration\n    , SrcBytes = sent_bytes\n    , DstBytes = rcvd_bytes\n    , MessageId = msg_id\n    , SrcDomain = fqdn_src_match\n    , DstDomain = fqdn_dst_match\n</code></pre>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20August%202022/#presentation-from-ashwin-patil","title":"Presentation from Ashwin Patil","text":"<p>https://github.com/ashwin-patil/blue-teaming-with-kql/blob/main/KQLCafe-BlueTeamingwithKQL-2022.pdf</p>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20August%202022/#ip-ranges","title":"IP Ranges","text":"<p>Below are the KQL queries I demonstrated while talking about hunting for IP range related data. </p> <pre><code>let MySubnetsList =  _GetWatchlist('NetworkAddresses');\nSigninLogs\n| extend city_ = tostring(LocationDetails.city)\n| extend state_ = tostring(LocationDetails.state)\n| project TimeGenerated,CorrelationId, UserPrincipalName, IPAddress, Location, AppDisplayName, ClientAppUsed, city_, state_\n| evaluate ipv4_lookup(MySubnetsList, IPAddress,SearchKey, return_unmatched = true)\n| extend IsMatch = iff(isempty(SearchKey),\"No\",\"Yes\")\n| project-reorder IsMatch\n</code></pre> <pre><code>// network range mapping with sign-in logs\nlet MySubnetsList =  _GetWatchlist('NetworkAddresses');\nSigninLogs\n| extend city_ = tostring(LocationDetails.city)\n| extend state_ = tostring(LocationDetails.state)\n| project TimeGenerated,CorrelationId, UserPrincipalName, IPAddress, Location, AppDisplayName, ClientAppUsed, city_, state_\n| evaluate ipv4_lookup(MySubnetsList, IPAddress,SearchKey, return_unmatched = true)\n// | where isempty([\"Range Name\"])\n| summarize count() by IPAddress, Location, Tags, [\"Range Name\"]\n</code></pre> <pre><code>let MySubnets = toscalar ( _GetWatchlist('NetworkAddresses')\n| summarize make_set((SearchKey)));\nSigninLogs\n| extend ismatch = ipv4_is_in_any_range(IPAddress,MySubnets)\n| extend city_ = tostring(LocationDetails.city)\n| extend state_ = tostring(LocationDetails.state)\n| project TimeGenerated,CorrelationId, UserPrincipalName, IPAddress, Location, ismatch, AppDisplayName, ClientAppUsed, city_, state_\n</code></pre>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20August%202022/#azure-threat-research-matrix-kql-azt4031-local-resource-hijack-cloud-shell-img","title":"Azure-Threat-Research-Matrix-KQL - AZT403.1 - Local Resource Hijack: Cloud Shell .IMG","text":"<p>AZT403.1 - Local Resource Hijack: Cloud Shell .IMG</p>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20August%202022/#questions","title":"Questions","text":"<p>Q: can you explain the \"isfuzzy=true\" ? A: isfuzzy==true  // skip if you find an error to next command</p> <p>Q: any difference between &lt;&gt; and == ? A: they are the polar opposite Q: so &lt;&gt; is the same as !=. ? A: Correct</p>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20August%202022/#kql-community-contribution","title":"KQL Community Contribution","text":"<p>The following code was shared by Mike Fernandez</p> <pre><code>//////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Name: Emotet Malware Process Search - Time window join - v1\n// =======================================================================================================\n// References:\n// - KQL Time window join - https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/join-timewindow\n// - FILE 08072022.xls - https://tria.ge/220708-q7h7fsfbf2/behavioral1 &lt;- commandline usage example\n// - DOCUMENT 625.xls - https://tria.ge/220707-r2743ahcgp/behavioral1 &lt;- commandline usage example\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\nlet lookupWindow = 3min;\nlet lookupBin = lookupWindow / 2.0; // lookup bin = equal to 1/2 of the lookup window\nlet timeframe = 1d;\nDeviceProcessEvents\n| where Timestamp &gt; ago(timeframe)\n| where (FileName == \"systeminfo.exe\"\n        and ProcessCommandLine == \"systeminfo\")\n    or (FileName has \"ipconfig\"\n        and ProcessCommandLine has_any (\"/all\",\"-all\"))\n    or (FileName == \"nltest.exe\"\n        and ProcessCommandLine has \"/dclist:\")\n| project Timestamp, ReportId, DeviceId, DeviceName, AccountName, AccountDomain, FileName, ProcessCommandLine,\n    Process1_EventTime=Timestamp, InitiatingProcessFileName, InitiatingProcessCommandLine, InitiatingProcessParentFileName,\n    TimeKey = bin(Timestamp, lookupBin)\n| join kind=inner\n    (\n    DeviceProcessEvents\n    | where Timestamp &gt; ago(timeframe)\n    | where (FileName == \"systeminfo.exe\"\n            and ProcessCommandLine == \"systeminfo\")\n        or (FileName has \"ipconfig\"\n          and ProcessCommandLine has_any (\"/all\",\"-all\"))\n        or (FileName == \"nltest.exe\"\n          and ProcessCommandLine has \"/dclist:\")\n    | project ReportId, DeviceId, DeviceName, FileName, ProcessCommandLine, Process2_EventTime=Timestamp,\n        InitiatingProcessFileName, InitiatingProcessCommandLine, InitiatingProcessParentFileName,\n              TimeKey = range(bin(Timestamp-lookupWindow, lookupBin),\n                              bin(Timestamp, lookupBin),\n                              lookupBin)\n    | mv-expand TimeKey to typeof(datetime)\n    ) on DeviceName, TimeKey\n| where FileName != FileName1\n| join kind=inner\n    (\n    DeviceProcessEvents\n    | where Timestamp &gt; ago(timeframe)\n| where (FileName == \"systeminfo.exe\"\n        and ProcessCommandLine == \"systeminfo\")\n    or (FileName has \"ipconfig\"\n        and ProcessCommandLine has_any (\"/all\",\"-all\"))\n    or (FileName == \"nltest.exe\"\n        and ProcessCommandLine has \"/dclist:\")\n| project ReportId, DeviceId, DeviceName, FileName, ProcessCommandLine, Process3_EventTime=Timestamp,\n    InitiatingProcessFileName, InitiatingProcessCommandLine, InitiatingProcessParentFileName,\n              TimeKey = range(bin(Timestamp-lookupWindow, lookupBin),\n                              bin(Timestamp, lookupBin),\n                              lookupBin)\n    | mv-expand TimeKey to typeof(datetime)\n    ) on DeviceName, TimeKey\n| where (FileName1 != FileName and FileName1 != FileName2 and FileName != FileName1 and FileName != FileName2)\n| where (Process2_EventTime - Process1_EventTime) between (0min .. lookupWindow)\n    and (Process3_EventTime - Process2_EventTime) between (0min .. lookupWindow)\n| project Timestamp, ReportId, DeviceId, DeviceName, AccountName, AccountDomain,\n    Process1=FileName, Process2=FileName1, Process3=FileName2,\n    Process1_EventTime, Process2_EventTime,  Process3_EventTime,\n    Process1_CommandLine = ProcessCommandLine, Process1_InitiatingProcessFileName=InitiatingProcessFileName,\n    Process1_InitiatingProcessCommandLine=InitiatingProcessCommandLine, Process1_InitiatingProcessParentFileName=InitiatingProcessParentFileName,\n    Process2_CommandLine = ProcessCommandLine1, Process2_InitiatingProcessFileName=InitiatingProcessFileName,\n    Process2_InitiatingProcessCommandLine=InitiatingProcessCommandLine, Process2_InitiatingProcessParentFileName=InitiatingProcessParentFileName,\n    Process3_CommandLine = ProcessCommandLine2, Process3_InitiatingProcessFileName=InitiatingProcessFileName,  \n    Process3_InitiatingProcessCommandLine=InitiatingProcessCommandLine, Process3_InitiatingProcessParentFileName=InitiatingProcessParentFileName\n| sort by Process1_EventTime\n</code></pre>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20February%202022/","title":"Hello from Down Under","text":"<p>Date: 22. February 2022</p> <p>Hosts - Gianni - Alex</p> <p>Guest Matt Zorich</p> <p>Show Content - Show Presentation - Show Recording</p> <p></p>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20February%202022/#agenda","title":"Agenda","text":"<ul> <li>Hello again</li> <li>KQL Tables | What's new in KQL</li> <li>KQL Tools</li> <li>Todays guest speaker: Matt Zorich </li> <li>What did you do with KQL this month?</li> <li>KQL Challenge of the month</li> </ul>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20February%202022/#hello-again","title":"Hello Again","text":"<p>After our first show in January 2022 we received a lot of positive feedback from the community and Microsoft.  We welcome everyone to actively participate in the community. We therefore have created KQL Cafe presence across various platforms:</p> <ul> <li>Discord Channel</li> <li>LinkedIn group</li> <li>Twitter Community</li> </ul>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20February%202022/#kql-tables-whats-new-in-kql","title":"KQL Tables | What's new in KQL","text":""},{"location":"shownotes/2022/KQL%20Cafe%20-%20February%202022/#devicetvmsoftwareevidencebeta","title":"DeviceTvmSoftwareEvidenceBeta","text":"<p>The DeviceTvmSoftwareEvidenceBeta table in the advanced hunting schema contains data from Threat &amp; Vulnerability Management related to the software evidence section. This table allows you to view evidence of where a specific software was detected on a device. You can use this table, for example, to identify the file paths of specific software. Use this reference to construct queries that return information from the table.</p> <ul> <li> <p>DeviceTvmSoftwareEvidenceBeta</p> </li> <li> <p>Guidance for preventing, detecting, and hunting for exploitation of the Log4j 2 vulnerability - Microsoft Security Blog</p> </li> </ul> <pre><code>//  DeviceTvmSoftwareEvidenceBeta\nDeviceTvmSoftwareEvidenceBeta\n| mv-expand DiskPaths, RegistryPaths\n| project DeviceId, SoftwareName, SoftwareVendor, SoftwareVersion, DiskPaths, RegistryPaths, LastSeenTime\n</code></pre> <pre><code>DeviceInfo\n| summarize arg_max(Timestamp,*) by DeviceName\n| where DeviceName contains \"workstation16\"\n| join \n//  DeviceTvmSoftwareEvidenceBeta\nDeviceTvmSoftwareEvidenceBeta\non $left.DeviceId ==  $right.DeviceId\n| mv-expand DiskPaths, RegistryPaths\n| project DeviceId, SoftwareName, SoftwareVendor, SoftwareVersion, DiskPaths, RegistryPaths, LastSeenTime\n</code></pre>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20February%202022/#aadsignineventsbeta","title":"AADSignInEventsBeta","text":"<p>The AADSignInEventsBeta table in the advanced hunting schema contains information about Azure Active Directory interactive and non-interactive sign-ins</p> <ul> <li> <p>AADSignInEventsBeta</p> </li> <li> <p>Hunt for Azure Active Directory sign-in events</p> </li> </ul> <pre><code>// AADSignInEventsBeta \n// Users with multiple cities \n// Gets a list of users that signed in from multiple locations in the last 30 days\nAADSignInEventsBeta \n| where  Timestamp &gt;= ago(30d)\n| summarize CountPerCity = dcount(City), citySet = makeset(City) by AccountUpn \n| where CountPerCity &gt; 1\n| order by CountPerCity desc \n</code></pre>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20February%202022/#devicenetworkevents-actiontype-networksignatureinspected","title":"DeviceNetworkEvents \u2013 ActionType \u2013 NetworkSignatureInspected","text":"<p>We discovered a new ActionType* within the DeviceNetworkEvents table. NetworkSignatureInspected**</p> <p>// DeviceNetworkEvents DeviceNetworkEvents | where ActionType == 'NetworkSignatureInspected' | extend signaturename = tostring(parse_json(AdditionalFields).SignatureName) | distinct signaturename</p> <p>Gianni prepared the following KQL queries for identifying DNS traffic.</p> <pre><code>// Do we have DNS Traffic\nDeviceNetworkEvents\n| where RemotePort == 53\n| where ActionType in (\"ConnectionSuccess\",\"ConnectionFound\")\n</code></pre> <pre><code>// Which servers receive DNS Traffic\nDeviceNetworkEvents\n| where RemotePort == 53\n| where ActionType in (\"ConnectionSuccess\",\"ConnectionFound\")\n| summarize Total = count(), Devices = dcount(DeviceId)  by RemoteIP\n</code></pre> <pre><code>// Introducing Network Signatures\nDeviceNetworkEvents\n| where ActionType == \"NetworkSignatureInspected\"\n| extend AF = parse_json(AdditionalFields)\n| extend SignatureName = AF.SignatureName\n</code></pre> <pre><code>// hunting for DNS servers\nDeviceNetworkEvents\n| where ActionType == \"NetworkSignatureInspected\"\n| extend AF = parse_json(AdditionalFields)\n| extend SignatureName = AF.SignatureName\n| where SignatureName == \"DNS_Request\"\n| summarize Total = count(), Servers = dcount(DeviceId) by RemoteIP\n</code></pre> <pre><code>// hunting for DNS on different ports\nlet DNSPorts = dynamic([53]);\nDeviceNetworkEvents\n| where ActionType == \"NetworkSignatureInspected\"\n| extend AF = parse_json(AdditionalFields)\n| extend SignatureName = AF.SignatureName\n| where SignatureName == \"DNS_Request\"\n| where RemotePort !in(DNSPorts)\n</code></pre>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20February%202022/#kql-tools","title":"KQL Tools","text":"<p>If you use Visual Studio Code for editing KQL queries, you want to look at the following Visual Studio Code extensions.</p> <ul> <li> <p>Kuskus Kusto Syntax Highlighting</p> </li> <li> <p>Kuskus Kusto Language Server</p> </li> </ul>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20February%202022/#what-did-you-do-with-kql-this-month","title":"What did you do with KQL this month?","text":"<p>Last year the Microsoft Defender for Identity team wrote a blog post about Microsoft Defender for Identity and Npcap</p> <p>To identify the current state of npap / winpcap deployments across MDI Agents, Alex started to write a KQL query, shared this with Gianni who added a few refinements to it. This is a great example of how the community can help each other. </p> <pre><code>DeviceNetworkEvents\n| where LocalPort == \"88\"\n| distinct DeviceId\n| join kind=inner (\n    DeviceInfo\n    | where OSPlatform hasprefix \"windowsserver\"\n    | summarize  arg_max(Timestamp,*) by DeviceId\n) on DeviceId\n| project Timestamp, DeviceId, OSPlatform, OSVersionInfo\n| join kind=leftouter (\n    DeviceProcessEvents\n    | where FileName =~ \"Microsoft.Tri.Sensor.exe\"\n    | summarize arg_max(Timestamp,*) by DeviceId\n    | distinct DeviceId, ProcessVersionInfoProductName, ProcessVersionInfoProductVersion\n) on DeviceId\n| project-away DeviceId1\n| join kind=inner (\n    DeviceTvmSoftwareInventory\n    | where SoftwareName contains \"pcap\"\n    | distinct DeviceId, SoftwareVendor, SoftwareName, SoftwareVersion\n) on DeviceId\n| project-away DeviceId1\n</code></pre>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20February%202022/#guest-speaker-matt-zorich","title":"Guest Speaker Matt Zorich","text":"<p>This month our guest speaker is Matt Zorich. Matt is well known within the KQL Commnity for his 365 days of KQL chellange he gave himself with the objective to release a KQL query every day. Matt's KQL work can be found here: https://github.com/reprise99/Sentinel-Queries</p> <p>During his presentation Matt walked us through a number of interesting KQL queries</p> <pre><code>SigninLogs\n| Take 10\n</code></pre> <pre><code>SigninLogs\n| count \n</code></pre> <pre><code>SigninLogs\n| where TimeGenerated &gt; ago (90d)\n| summarize appcount=count() by AppDisplayName\n</code></pre> <pre><code>SigninLogs\n| where TimeGenerated &gt; ago (90d)\n| summarize appcount=count() by AppDisplayName\n| sort by appcount desc \n</code></pre> <pre><code>SigninLogs\n| where TimeGenerated &gt; ago (90d)\n| summarize UserCount=count() by UserPrincipalName\n</code></pre> <pre><code>SigninLogs\n| where TimeGenerated &gt; ago (90d)\n| summarize UserCount=count() by IPAddress\n</code></pre> <pre><code>SigninLogs\n| where TimeGenerated &gt; ago (14d)\n| summarize count() by AuthenticationRequirement\n</code></pre> <pre><code>SigninLogs\n| where TimeGenerated &gt; ago (14d)\n| summarize Signlefactor=countif(AuthenticationRequirement == \"singleFactorAuthentication\"), Multifactor =countif(AuthenticationRequirement  == \"multiFactorAuthentication\") by AppDisplayName\n</code></pre> <pre><code>SigninLogs\n| where TimeGenerated &gt; ago (14d)\n| summarize Guest=countif(UserType == 'Guest'), Members=countif(UserType == 'Member') by AppDisplayName\n</code></pre> <pre><code>SigninLogs\n| where TimeGenerated &gt; ago (14d)\n| summarize IPAddresses = make_list(IPAddress) by UserPrincipalName\n</code></pre> <pre><code>SigninLogs\n| where TimeGenerated &gt; ago (14d)\n| summarize IPAddresses = make_set(IPAddress) by UserPrincipalName\n</code></pre> <pre><code>SigninLogs\n| where TimeGenerated &gt; ago (14d)\n| summarize Applications = make_set(AppDisplayName) by UserPrincipalName\n</code></pre> <pre><code>SigninLogs\n| where TimeGenerated &gt; ago (14d)\n| summarize Applications = make_set(AppDisplayName) by UserPrincipalName\n| extend Appcount = array_length(Applications)\n</code></pre> <pre><code>SigninLogs\n| where TimeGenerated &gt; ago (14d)\n| summarize arg_max(TimeGenerated,*) by AppId\n</code></pre> <pre><code>SigninLogs\n| where TimeGenerated &gt; ago (90d)\n| summarize arg_max(TimeGenerated,*) by AppId\n| project AppDisplayName, ['LastLogonTime']=TimeGenerated,['Days since last logon']=datetime_diff(\"Day\",now(),TimeGenerated)\n</code></pre> <pre><code>SigninLogs\n| where TimeGenerated &gt; ago (90d)\n| summarize count() by AppDisplayName,bin(TimeGenerated,8h)\n| render timechart \n</code></pre> <pre><code>SigninLogs\n| where TimeGenerated &gt; ago (14d)\n| summarize Signlefactor=countif(AuthenticationRequirement == \"singleFactorAuthentication\"), Multifactor =countif(AuthenticationRequirement  == \"multiFactorAuthentication\") by bin(TimeGenerated,1d)\n| render timechart \n</code></pre> <pre><code>SigninLogs\n| where TimeGenerated &gt; ago (14d)\n| summarize GuestSingleFactor=countif(AuthenticationRequirement == \"singleFactorAuthentication\" and UserType == \"Guest\"),\nGuestMultiFactor = countif(AuthenticationRequirement == \"multiFactorAuthentication\" and UserType == \"Guest\"),\nMemberSingleFactor=countif(AuthenticationRequirement == \"singleFactorAuthentication\" and UserType == \"Member\"),\nMemberMultiFactor = countif(AuthenticationRequirement == \"multiFactorAuthentication\" and UserType == \"Member\")\nby bin(TimeGenerated,1d)\n| render timechart \n</code></pre>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20February%202022/#kql-challenge-of-the-month","title":"KQL Challenge of the month","text":"<p>The winner of lasts months challenge is @shviammalaviya With his submission: https://github.com/KQLCafe/kqlcafecommunity/issues/1</p> <p>For this months KQL Challenge of the month, we invite the community to write queries. Further instructions can be found here</p>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20June%202022/","title":"KQL Cafe June 2022","text":"<p>Date: 28. June 2022</p> <p>Hosts</p> <ul> <li>Gianni</li> <li>Alex</li> </ul> <p>Show Content</p> <ul> <li></li> </ul>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20June%202022/#topics","title":"Topics","text":"<ul> <li>0:00 Welcome to KQL Cafe</li> <li>What's new in KQL:</li> <li>1:50 Microsoft Defender Vulnerability Management</li> <li>Our KQL Guest:</li> <li>6:19 Mehmet Ergene - Scan Operator</li> <li>What did you do with KQL this month?</li> <li>1:01:48 Fileshare auditing with the AMA agent</li> <li>Bonus Material:</li> <li>1:17:40 Handpan demo by Mehmet</li> </ul>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20June%202022/#agenda","title":"Agenda","text":"<p>0:00 Welcome to KQL Cafe What's new in KQL: 4:54 Microsoft Sentinel Active Directory EUBA Information from Microsoft Defender for Identity Working with IOCs: 12:35 Quantum Ransomware from The DFIR Report  KQL Tools: 57:20 Threat Indicators in Microsoft Sentinel Learning KQL: 1:19:56 Parse vs Extract What did you do with KQL this month? 1:25:30 Building an ASIM parser 1:51:35 Microsoft Defender Vulnerability Management: Browser Extensions Misc: 2:02:10 We are giving talks at Workplace Ninja Summit </p>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20June%202022/#show-content-references","title":"Show content references","text":"<ul> <li>Quantum Ransomware Report</li> <li>Microsoft Defender Vulnerability Management: Browser Extensions</li> <li>Visit us at Workplace Ninja Summit</li> </ul>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20March%202022/","title":"KQL Workbooks","text":"<p>Date: 22. March 2022</p> <p>Hosts - Gianni - Alex</p> <p>Guest Matthew Lowe</p> <p>Show Content - Show Presentation - </p>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20March%202022/#agenda","title":"Agenda","text":"<ul> <li>Hello again</li> <li>What's new in KQL</li> <li>IOCs</li> <li>Learn KQL</li> <li>KQL Tools</li> <li>Todays guest speaker: Matthew Lowe</li> <li>What did you do with KQL this month?</li> <li>KQL Challenge of the month</li> </ul>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20March%202022/#whats-new-in-kql","title":"What's new in KQL","text":""},{"location":"shownotes/2022/KQL%20Cafe%20-%20March%202022/#creating-large-watchlists","title":"Creating large watchlists","text":"<p>You can now create large watchlists with up to 500 MB file size by storing the files in an Azure Blob Storage account.</p>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20March%202022/#examples","title":"Examples","text":"<p>```// when the CNSArmyList is stored in an Azure blog storage Account // The CINS Army List // https://cinsscore.com/#list let cinsarmylist = (externaldata(ip:string) [@\"\"] with (format=\"txt\",IgnoreFirstRecord=true)); DeviceNetworkEvents | where TimeGenerated &gt; ago(30d) | where RemoteIP in (cinsarmylist) | project TimeGenerated, DeviceName, RemoteIP, RemotePort, LocalIP, LocalPort, ActionType <p> // when the CNSArmylist is imported as a watchlist let CNSArmyList = _GetWatchlist('CNSArmylist') | project IP; DeviceNetworkEvents | where TimeGenerated &gt; ago(30d) | where RemoteIP in (CNSArmyList) | project TimeGenerated, DeviceName, RemoteIP, RemotePort, LocalIP, LocalPort, ActionType <pre><code>- [Large Watchlist using SAS key is in Public Preview!](https://techcommunity.microsoft.com/t5/microsoft-sentinel-blog/large-watchlist-using-sas-key-is-in-public-preview/ba-p/3242370)\n\n### DeviceTvmSoftwareInventory\n\nthe ***ProductCodeCpe*** column within the [DeviceTvmSoftwareInventory](https://docs.microsoft.com/en-us/microsoft-365/security/defender/advanced-hunting-devicetvmsoftwareinventory-table?view=o365-worldwide) table can now be filtered to also identify software for which there is not a CPE.\n</code></pre> DeviceTvmSoftwareInventory | where ProductCodeCpe == @\"Not Available\" | project SoftwareVendor, SoftwareName, SoftwareVersion <pre><code>## IOCs\n\nThis month [Gianni](https://twitter.com/castello_johnny) talked about IOCs related to the Conti Leaks\n\n***Vulnerability management***\nhttps://pastebin.com/raw/pv1mDGYC \nkudos to @c3rb3ru5d3d53c \n\n***Advanced hunting***\nhttps://ddanchev.blogspot.com/2022/02/exposing-conti-ransomware-gang-osint_28.html\nkudos to @dancho_danchev\n</code></pre> let CVE = datatable(CVE:string)[\"cve-2015-2546\",\"cve-2016-3309\",\"cve-2017-0101\",\"cve-2018-8120\",\"cve-2019-0543\",\"cve-2019-0841\",\"cve-2019-1064\",\"cve-2019-1069\",\"cve-2019-1129\",\"cve-2019-1130\",\"cve-2019-1215\",\"cve-2019-1253\",\"cve-2019-1315\",\"cve-2019-1322\",\"cve-2019-1385\",\"cve-2019-1388\",\"cve-2019-1405\",\"cve-2019-1458\",\"cve-2020-0609\",\"cve-2020-0638\",\"cve-2020-0688\",\"cve-2020-0787\",\"cve-2020-0796\",\"cve-2020-1472\",\"cve-2021-1675\",\"cve-2021-1732\",\"cve-2021-21972\",\"cve-2021-21985\",\"cve-2021-22005\",\"cve-2021-26855\",\"cve-2021-34527\",\"cve-2021-44847\"]; DeviceTvmSoftwareVulnerabilities | where CveId in~(CVE) | summarize [\"Missing Patch Count\"] = count(), [\"Missing Patches\"] = make_set(RecommendedSecurityUpdate) by DeviceId, DeviceName <pre><code>\n</code></pre> let ContiMail = externaldata(Email:string) [     @\"https://raw.githubusercontent.com/KustoKing/ExternalData/main/Conti-Email\" ]; EmailEvents | where SenderFromAddress in~(ContiMail) or SenderMailFromAddress in~(ContiMail) or RecipientEmailAddress in~(ContiMail)</p> <p>let ContiIP = externaldata(IP:string) [     @\"https://raw.githubusercontent.com/KustoKing/ExternalData/main/Conti-IP\" ]; DeviceNetworkEvents | where RemoteIP in~(ContiIP) or LocalIP  in~(ContiIP) <pre><code>## Learn KQL\n[Gianni](https://twitter.com/castello_johnny) talked about the use of [Externaldata](https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/externaldata-operator?pivots=azuredataexplorer) operator in KQL queries. \n</code></pre> let lookBack = ago(30d); let list = (externaldata(Netblock:string, ASN:string, Company:string) [@\"https://raw.githubusercontent.com/KustoKing/SentinelWatchlists/main/ASN-of-CloudProviders.csv\"] with (ignoreFirstRecord=true, format=\"SCsv\")); let successResults = dynamic([0, 50055, 50057, 50011, 50155, 50105, 50129, 50133, 50140, 50005, 50074, 50076, 50079, 50155, 50173, 50158, 50072, 50074, 50097, 50125, 53003, 53000, 53001, 50129, 65001, 70043, 70044, 500121,700016]); let aadFunc = (tableName:string){ table(tableName) | where TimeGenerated &gt; lookBack | where ResultType in(successResults) | evaluate ipv4_lookup(list, IPAddress, Netblock) ; }; let aadSignin = aadFunc(\"SigninLogs\"); let aadNonInt = aadFunc(\"AADNonInteractiveUserSignInLogs\"); let aadSPN = aadFunc(\"AADServicePrincipalSignInLogs\"); let officeLogs = OfficeActivity | where TimeGenerated &gt; lookBack | evaluate ipv4_lookup(list, ClientIP, Netblock) ; union isfuzzy=true aadSignin, aadNonInt, aadSPN, officeLogs | summarize count(), Applications = make_set(AppDisplayName), IPAddresses = make_set(IPAddress), Days=dcount(bin(TimeGenerated, 1d)), Locations = make_set(Location) by Identity, ASN, Company <pre><code>## KQL Tools\n\n### Uncoder CTI\n\nUse [Uncoder CTI](https://cti.uncoder.io/) to generate IOC queries on the fly for Microsoft Sentinel and Microsoft Defender for Endpoint. \n\n\n\n## Guest Speaker Matthew Lowe\n\nThis month our guest speaker was [Matthew Lowe](https://www.linkedin.com/in/matthew-lowe-13b61990/). \n\nDuring his presentation Matthew  walked us through the following Microsoft Sentinel Workbooks:\n\n- Intro to KQL\n- Advanced KQL for Microsoft Sentinel\n\nFor more information watch the KQL Cafe session video or read the following blogs on Microsoft Tech Community. \n\n- [Get Hands-On KQL](https://techcommunity.microsoft.com/t5/microsoft-sentinel-blog/get-hands-on-kql-practice-with-this-microsoft-sentinel-workbook/ba-p/3055600)\n-   [Feedback Form](https://aka.ms/introtokqlsurvey)\n- [Advanced KQL Framework](https://techcommunity.microsoft.com/t5/microsoft-sentinel-blog/advanced-kql-framework-workbook-empowering-you-to-become-kql/ba-p/3033766)\n-   [Feedback Form](https://forms.office.com/r/qNS7cRmPWS)\n\n\n## What did you do with KQL this month?\n\n### Patch Management\n\nThis month - [Alex](https://twitter.com/alexverboon) worked on a query to identify the number of missing patches a device that's onboarded into Microsoft Defender for Endpoint.\n\nBelow is the query that was used to identify the number of missing patches for Windows Servers. You can easily adjust the querie to look for missing patches on Windows 10 devices. \n</code></pre> // Overview Missing KBs Windows Server DeviceTvmSoftwareVulnerabilities | where SoftwareName startswith 'windows_server' | where isnotempty(RecommendedSecurityUpdate) | distinct DeviceId, RecommendedSecurityUpdate, RecommendedSecurityUpdateId, SoftwareName | join kind=leftouter (     DeviceInfo     | where isnotempty(OSPlatform)     | where OnboardingStatus == 'Onboarded'     | where isnotempty(OSVersionInfo)     | summarize arg_max(Timestamp, ) by DeviceId)     on $left.DeviceId == $right.DeviceId | summarize MissingDevices = make_set(DeviceName) by SoftwareName, RecommendedSecurityUpdate, RecommendedSecurityUpdateId, OSVersionInfo, OSDistribution | extend TotalMissingKBDevice = array_length(MissingDevices) | project ['Bulletin'] = RecommendedSecurityUpdate, ['ID'] = RecommendedSecurityUpdateId, ['Total Exposed devices'] = TotalMissingKBDevice, ['Exposed devices'] = MissingDevices, OSVersionInfo, OSDistribution // | where OSDistribution == @\"WindowsServer2019\" // | where ['Exposed devices'] contains \"(device name)\" <pre><code>### Check last AzureAD sign-in date from users that are member of a sepcific AzureAD Group. \n\nThis month - [Alex](https://twitter.com/alexverboon) worked on a query to identify the users last sign-in date into AzureAD based on a specific AzureAD Group.\n\nScenario: You are deploying MFA and created an exclude group, after a while you want to cleanup that group, i.e. start removing users. To identify users that haven't logged on to AzureAD for a while, use the following query.\n</code></pre> let AzGroup = \"CA_ExcludeAllUsers\"; let timerange=180d; let timeframe=180d; IdentityInfo | where TimeGenerated &gt; ago(timerange) | summarize arg_max(TimeGenerated,) by AccountUPN | mv-expand GroupMembership | where GroupMembership == AzGroup | extend AccountUPN = tolower(AccountUPN) | join kind = leftouter // leftanti ( SigninLogs | where TimeGenerated &gt; ago(timeframe) | where ResultType == 0 | summarize arg_max(TimeGenerated, *) by UserPrincipalName | extend LastLogon = TimeGenerated | extend UserPrincipalName = tolower(UserPrincipalName) ) on $left.AccountUPN == $right.UserPrincipalName | project TimeGenerated, AccountUPN, UserPrincipalName, LastLogon ```</p>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20March%202022/#kql-challenge-of-the-month","title":"KQL Challenge of the month","text":"<p>This month we invite you to join the #365DaysofKQL Scavenger Hunt 1 created by Matt Zorich</p> <p>#365DaysofKQL Scavenger Hunt 1</p> <p>Entries will close midnight April 8th (UTC time)</p>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20May%202022/","title":"KQL Scan Operator","text":"<p>Date: 31. May 2022</p> <p>Hosts</p> <ul> <li>Gianni</li> <li>Alex</li> </ul> <p>Guest</p> <ul> <li>Mehmet Ergene</li> </ul> <p>Show Content</p> <ul> <li>Show Presentation</li> <li></li> </ul>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20May%202022/#topics","title":"Topics","text":"<ul> <li>0:00 Welcome to KQL Cafe</li> <li>What's new in KQL:</li> <li>1:50 Microsoft Defender Vulnerability Management</li> <li>Our KQL Guest:</li> <li>6:19 Mehmet Ergene - Scan Operator</li> <li>What did you do with KQL this month?</li> <li>1:01:48 Fileshare auditing with the AMA agent</li> <li>Bonus Material:</li> <li>1:17:40 Handpan demo by Mehmet</li> </ul>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20May%202022/#agenda","title":"Agenda","text":"<ul> <li>Hello again</li> <li>What's new in KQL</li> <li>Learn KQL</li> <li>Todays guest speaker: Mehmet Ergene</li> </ul>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20May%202022/#whats-new-in-kql","title":"What's new in KQL","text":""},{"location":"shownotes/2022/KQL%20Cafe%20-%20May%202022/#guest-speaker","title":"Guest Speaker","text":"<p>This month our guest speaker was Mehmet Ergene</p>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20May%202022/#what-did-you-do-with-kql-this-month","title":"What did you do with KQL this month?","text":""},{"location":"shownotes/2022/KQL%20Cafe%20-%20November%202022/","title":"KQL Cafe   November 2022","text":""},{"location":"shownotes/2022/KQL%20Cafe%20-%20November%202022/#november-2022","title":"November 2022","text":""},{"location":"shownotes/2022/KQL%20Cafe%20-%20October%202022/","title":"KQL Cafe - October 2022","text":""},{"location":"shownotes/2022/KQL%20Cafe%20-%20October%202022/#recording-and-presentation","title":"Recording and Presentation","text":"<ul> <li>Recording</li> <li>Presentation</li> </ul>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20October%202022/#hosts","title":"Hosts","text":"<ul> <li>Gianni</li> <li>Alex</li> </ul>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20October%202022/#guests","title":"Guests","text":""},{"location":"shownotes/2022/KQL%20Cafe%20-%20September%202022/","title":"KQL Cafe September 2022","text":"<p>Date: 30. September 2022</p> <p>Hosts</p> <ul> <li>Gianni</li> <li>Alex</li> </ul> <p>Guest</p> <ul> <li>Mattias Borg</li> </ul> <p>Show Content</p> <ul> <li></li> </ul>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20September%202022/#agenda","title":"Agenda","text":""},{"location":"shownotes/2022/KQL%20Cafe%20-%20September%202022/#kusto-detective","title":"Kusto Detective","text":"<p>Kusto Detective Agency is looking for new recruits. Do you want to be a certified as a Kusto Detective? To become a detective, you need to complete some Kusto assignments.  Those who complete the journey will become full-fledged detectives and be awarded special badges!</p> <p>Join Now https://detective.kusto.io/</p>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20September%202022/#scan-operator-revisited","title":"Scan Operator Revisited","text":"<p>Gianni shared kql queries using the scan-operator</p> <pre><code>// Find Evil\nsearch \"ntdsutil\"\n\n// Find Evil\nDeviceImageLoadEvents\n| where InitiatingProcessFileName =~ \"ntdsutil.exe\" \n\n// Step one samlib.dll\nDeviceImageLoadEvents\n| where InitiatingProcessFileName =~ \"ntdsutil.exe\" \n| sort by Timestamp asc\n| scan with_match_id=funnel_id declare(Step:string, Delta:timespan) with\n(\n    step Authentication: InitiatingProcessFileName =~ \"ntdsutil.exe\" \n        and FileName =~ \"samlib.dll\" \n            =&gt; Step = \"Authenticated\";\n)\n\n// Step two add vss_ps.dll\nDeviceImageLoadEvents\n| where InitiatingProcessFileName =~ \"ntdsutil.exe\" \n| sort by Timestamp asc\n| scan with_match_id=funnel_id declare(Step:string, Delta:timespan) with\n(\n    step Authentication: InitiatingProcessFileName =~ \"ntdsutil.exe\" \n        and FileName =~ \"samlib.dll\" \n            =&gt; Step = \"Authenticated\";\n    step NTDSExport: InitiatingProcessFileName =~ \"ntdsutil.exe\" \n        and FileName =~ \"vss_ps.dll\" \n        and Authentication.Timestamp &gt; 10m \n            =&gt; Step = \"NTDS export\"\n            , Delta = Timestamp - Authentication.Timestamp;\n)\n| project-reorder Timestamp, DeviceId, DeviceName, funnel_id, FileName, Step\n\n// Step three finalize all\nDeviceImageLoadEvents\n| where InitiatingProcessFileName =~ \"ntdsutil.exe\" \n| sort by Timestamp asc\n| scan with_match_id=funnel_id declare(Step:string, Delta:timespan) with\n(\n    step Authentication: InitiatingProcessFileName =~ \"ntdsutil.exe\" \n        and FileName =~ \"samlib.dll\" \n            =&gt; Step = \"Authenticated\";\n    step NTDSExport: InitiatingProcessFileName =~ \"ntdsutil.exe\" \n        and FileName =~ \"vss_ps.dll\" \n        and Authentication.Timestamp &gt; 10m \n            =&gt; Step = \"NTDS export\"\n            , Delta = Timestamp - Authentication.Timestamp;\n)\n| where Step == \"NTDS export\"\n| project-reorder Timestamp, DeviceId, DeviceName, funnel_id, FileName, Step\n</code></pre>"},{"location":"shownotes/2022/KQL%20Cafe%20-%20September%202022/#mattias-borg","title":"Mattias Borg","text":""},{"location":"shownotes/2022/KQL%20Cafe%20-%20September%202022/#what-did-you-do-with-kql-this-month","title":"What did you do with KQL this month?","text":""},{"location":"shownotes/2022/KQL%20Cafe%20-%20September%202022/#microsoft-defender-for-cloud-apps","title":"Microsoft Defender for Cloud Apps","text":"<p>Alex shared some KQL queries for Defender for Cloud Apps shadow reporting. </p> <pre><code>// mcas shadown reporting - report by app\nMcasShadowItReporting\n| where TimeGenerated &gt; ago (90d)\n| where StreamName == \"Win10 Endpoint Users\"\n| summarize Totalbytes = sum(TotalBytes), UploadBytes = sum( UploadedBytes), DownloadBytes = sum(DownloadedBytes), Users = make_set(EnrichedUserName), Devices = make_set(MachineName), IPAddresses = make_set(IpAddress)  by AppName, AppScore\n| extend TotalDevices = array_length(Devices)\n| extend TotalIPAddresses = array_length(IPAddresses)\n| extend Totalusers = array_length(Users)\n| extend UploadMB = format_bytes(UploadBytes,0,\"MB\")\n| extend TotalTraffic = format_bytes(Totalbytes,0,\"MB\")\n| extend DownloadMB = format_bytes(DownloadBytes,0,\"MB\")\n| project AppName,AppScore, TotalDevices, TotalIPAddresses, Totalusers, TotalTraffic, UploadMB, DownloadMB, IPAddresses, Devices, Users\n</code></pre> <pre><code>// mcas shadown reporting - report by user\nMcasShadowItReporting\n| where TimeGenerated &gt; ago (90d)\n| where StreamName == \"Win10 Endpoint Users\"\n| summarize Totalbytes = sum(TotalBytes), UploadBytes = sum( UploadedBytes), DownloadBytes = sum(DownloadedBytes), Users = make_set(EnrichedUserName), Devices = make_set(MachineName), IPAddresses = make_set(IpAddress) , Apps = make_set(AppName) by EnrichedUserName, AppScore\n| extend TotalDevices = array_length(Devices)\n| extend TotalIPAddresses = array_length(IPAddresses)\n| extend Totalusers = array_length(Users)\n| extend TotalApps = array_length(Apps)\n| extend UploadMB = format_bytes(UploadBytes,0,\"MB\")\n| extend TotalTraffic = format_bytes(Totalbytes,0,\"MB\")\n| extend DownloadMB = format_bytes(DownloadBytes,0,\"MB\")\n| project EnrichedUserName, TotalDevices, TotalIPAddresses, Totalusers,TotalApps, TotalTraffic, UploadMB, DownloadMB, IPAddresses, Devices, Users, Apps, AppScore\n</code></pre>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20April%20I%202023/","title":"KQL Cafe - April 2023","text":""},{"location":"shownotes/2023/KQL%20Cafe%20-%20April%20I%202023/#recording-and-presentation","title":"Recording and Presentation","text":"<ul> <li>Recording</li> <li>Presentation</li> </ul>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20April%20I%202023/#hosts","title":"Hosts","text":"<ul> <li>Gianni</li> <li>Alex</li> </ul>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20April%20I%202023/#guests","title":"Guests","text":"<p>Alexander Sloutsky</p>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20April%20II%202023/","title":"KQL Cafe - April 2023","text":""},{"location":"shownotes/2023/KQL%20Cafe%20-%20April%20II%202023/#recording-and-presentation","title":"Recording and Presentation","text":"<ul> <li>Recording</li> <li>Presentation</li> </ul>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20April%20II%202023/#hosts","title":"Hosts","text":"<ul> <li>Gianni</li> <li>Alex</li> </ul>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20April%20II%202023/#guests","title":"Guests","text":"<p>Thijs Leconte</p>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20February%202023/","title":"KQL Cafe - February 2023","text":""},{"location":"shownotes/2023/KQL%20Cafe%20-%20February%202023/#recording-and-presentation","title":"Recording and Presentation","text":"<ul> <li>Recording</li> <li>Presentation</li> </ul>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20February%202023/#hosts","title":"Hosts","text":"<ul> <li>Gianni</li> <li>Alex</li> </ul>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20February%202023/#guests","title":"Guests","text":"<ul> <li>Ugur Koc</li> </ul>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20February%202023/#news","title":"News","text":"<ul> <li>Interactive KQL Cheatsheet</li> <li>KQL Baby</li> </ul>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20February%202023/#what-did-you-do-with-kql-this-month","title":"What did you do with KQL this month?","text":""},{"location":"shownotes/2023/KQL%20Cafe%20-%20February%202023/#tampering-events","title":"Tampering Events","text":"<ul> <li>Tampering Events</li> </ul> <pre><code>DeviceEvents\n| where TimeGenerated &gt; ago (30d)\n| where ActionType == @\"TamperingAttempt\"\n| extend AF = parse_json(AdditionalFields)\n| evaluate bag_unpack(AF)\n</code></pre> <pre><code>DeviceEvents\n| where TimeGenerated &gt; ago (30d)\n| where ActionType == @\"TamperingAttempt\"\n| extend AF = parse_json(AdditionalFields)\n| evaluate bag_unpack(AF,columnsConflict='keep_source') : (DeviceName:string,TimeGenerated:datetime,ActionType:string,Status:string, TamperingAction:long,Target:string)\n</code></pre>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20February%202023/#parse-commandline","title":"Parse Commandline","text":"<pre><code>DeviceEvents\n| where ActionType contains \"PowerShell\"\n| project TimeGenerated, DeviceName, InitiatingProcessCommandLine\n| extend Cmd1 = parse_command_line(InitiatingProcessCommandLine,\"windows\")\n| mv-expand Cmd1\n| summarize count() by tostring(Cmd1)\n</code></pre> <pre><code>DeviceNetworkEvents\n| extend Cmd1 = parse_command_line(InitiatingProcessCommandLine,\"windows\")\n| where Cmd1 contains \"Download\"\n| mv-expand Cmd1\n| project Cmd1, RemoteUrl\n</code></pre>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20February%202023/#go-hunt-abc-of-threat-hunting","title":"Go HUnt - ABC of threat hunting","text":"<ul> <li>ABC of threat hunting</li> </ul>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20February%202023/#a","title":"A","text":"<p><pre><code>// Was there a new sign-on using the credential?\u200b\nlet AccountDomainToResearch = '';// leave blank for local accounts\u200b\nlet AccountNameToResearch = ''; \u200b\nDeviceLogonEvents\u200b\n| where iff(isempty(AccountDomainToResearch), AccountDomain == DeviceName, AccountDomain =~ AccountDomainToResearch) and AccountName =~ AccountNameToResearch\u200b\n| summarize EarliestTimestamp = min(Timestamp), LatestTimestamp = max(Timestamp), Attempts = count() by ActionType, DeviceId, DeviceName, RemoteIP, Protocol\u200b\n| order by EarliestTimestamp desc \u200b\n</code></pre> \u200b <pre><code>let AccountDomainToResearch = '';\u200b\nlet AccountNameToResearch = ''; \u200b\nIdentityLogonEvents\u200b\n| where \u200b\n    AccountName =~ AccountNameToResearch and \u200b\n    AccountDomain =~ AccountDomainToResearch\u200b\n| summarize EarliestTimestamp = min(Timestamp), LatestTimestamp = max(Timestamp), Attempts = count() by ActionType, Application, LogonType,DeviceName, IPAddress, DestinationDeviceName, DestinationIPAddress, DestinationPort\u200b\n| project-reorder EarliestTimestamp, LatestTimestamp\u200b\n| order by EarliestTimestamp desc\u200b\n</code></pre></p> <pre><code>\u200b\u200b// Were any other credentials potentially compromised?\u200b\nAlertInfo\u200b\n| where AttackTechniques contains \"T1557\" // Adversary-in-the-Middle\u200b\n    or AttackTechniques contains \"T1110\" // Brute Force\u200b\n    or AttackTechniques contains \"T1555\" // Credentials from Password Stores\u200b\n    or AttackTechniques contains \"T1212\" // Exploitation for Credential Access\u200b\n    or AttackTechniques contains \"T1187\" // Forced Authentication\u200b\n    or AttackTechniques contains \"T1606\" // Forge Web Credentials\u200b\n    or AttackTechniques contains \"T1056\" // Input Capture\u200b\n    or AttackTechniques contains \"T1556\" // Modify Authentication Process\u200b\n    or AttackTechniques contains \"T1111\" // Multi-Factor Authentication Interception\u200b\n    or AttackTechniques contains \"T1621\" // Multi-Factor Authentication Request generation\u200b\n    or AttackTechniques contains \"T1040\" // Network Sniffing\u200b\n    or AttackTechniques contains \"T1003\" // OS Credential Dumping\u200b\n    or AttackTechniques contains \"T1528\" // Steal Application Access Token\u200b\n    or AttackTechniques contains \"T1558\" // Steal or Forge Kerberos Tickets\u200b\n    or AttackTechniques contains \"T1539\" // Steal Web Session Cookie\u200b\n    or AttackTechniques contains \"T1552\" // Unsecured Credentials\u200b\n| join kind=leftouter AlertEvidence on AlertId\u200b\n</code></pre> <pre><code>// Did the identity have administrator or root permissions to the device? \u200b\nlet AccountNameToResearch = '';\u200b\nlet AccountDomainToResearch = ''; // Leave blank if local\u200b\nDeviceInfo\u200b\n| where OSPlatform startswith \"Windows\" and OnboardingStatus == 'Onboarded'\u200b\n| join kind=rightsemi DeviceProcessEvents on DeviceId\u200b\n//| where AccountName =~ AccountNameToResearch and iff(isempty(AccountDomainToResearch), AccountDomain =~ DeviceId, AccountDomain =~ AccountDomainToResearch)\u200b\n| extend IsElevated = (ProcessTokenElevation != 'None')\u200b\n| summarize IsAdmin = max(IsElevated) by AccountDomain, AccountName\u200b\n</code></pre> <pre><code>// Does the identity have administrator or root permissions to other devices or to your authentication service\u200b\nlet AccountNameToResearch = '';\u200b\nlet AccountDomainToResearch = ''; // Leave blank if local\u200b\nDeviceInfo\u200b\n| where OSPlatform startswith \"Windows\" and OnboardingStatus == 'Onboarded'\u200b\n| join kind=rightsemi DeviceProcessEvents on DeviceId\u200b\n//| where AccountName =~ AccountNameToResearch and iff(isempty(AccountDomainToResearch), AccountDomain =~ DeviceId, AccountDomain =~ AccountDomainToResearch)\u200b\n| extend IsElevated = (ProcessTokenElevation != 'None')\u200b\n| summarize IsAdmin = max(IsElevated) by DeviceId, DeviceName\u200b\n| order by IsAdmin desc\n</code></pre>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20February%202023/#b","title":"B","text":"<pre><code>// Was the suspicious activity associated with any known malware?\u200b\nlet DeviceIdToResearch = ''; \u200b\nDeviceEvents\u200b\n| where DeviceId =~ DeviceIdToResearch and \u200b\n    ActionType startswith \"AntivirusDetection\"\u200b\n| extend AdditionalFields = parse_json(AdditionalFields)\u200b\n| extend ThreatName = tostring(AdditionalFields.ThreatName), \u200b\n    WasExecutingWhileDetected = tobool(AdditionalFields.WasExecutingWhileDetected),\u200b\n    WasRemediated = tobool(AdditionalFields.WasRemediated)\u200b\n| project-reorder Timestamp, ThreatName, WasExecutingWhileDetected, WasRemediated, FolderPath, SHA256, InitiatingProcessAccountDomain, InitiatingProcessAccountName\u200b\n```\u200b\n\n```kql\n// Were any suspicious auto-start entries created by the identity?\u200b\nlet AccountNameToResearch = '';\u200b\nlet AccountDomainToResearch = ''; // leave blank for local accounts\u200b\nlet DeviceIdToResearch = ''; // leave blank for all devices\u200b\nunion DeviceRegistryEvents,\u200b\n(\u200b\n    DeviceEvents\u200b\n    | where ActionType in ('ServiceInstalled','DriverLoad','ScheduledTaskCreated','ScheduledTaskUpdated')\u200b\n)\u200b\n| where (isempty(DeviceIdToResearch) or DeviceId =~ DeviceIdToResearch) and \u200b\n    InitiatingProcessAccountName =~ AccountNameToResearch and \u200b\n    iff(isempty(AccountDomainToResearch), InitiatingProcessAccountDomain =~ DeviceName, InitiatingProcessAccountDomain =~ AccountDomainToResearch)\n</code></pre> <pre><code>// Were any new accounts created?\u200b\nlet DeviceIdToResearch = ''; \u200b\nDeviceEvents\u200b\n| where DeviceId =~ DeviceIdToResearch and \u200b\n    ActionType == 'UserAccountCreated'\n```\u200b\n\n```kql\n// Is the backdoor associated with any other alerts?\u200b\nlet BackdoorSha256 = '';\u200b\nAlertEvidence\u200b\n| where SHA256 =~ BackdoorSha256\u200b\n| join kind=rightsemi AlertInfo on AlertId\u200b\n</code></pre> <p><pre><code>// Is the backdoor present on any other devices?\u200b\nlet BackdoorSha256 = '';\u200b\nunion (\u200b\n    DeviceProcessEvents\u200b\n    | where SHA256 =~ BackdoorSha256\u200b\n), (\u200b\n    DeviceFileEvents\u200b\n    | where InitiatingProcessSHA256 =~ BackdoorSha256\u200b\n)\u200b\n</code></pre> \u200b <pre><code>// What network connections were made by the backdoor?\u200b\nlet BackdoorSha256 = '';\u200b\nDeviceNetworkEvents\u200b\n| where InitiatingProcessSHA256 =~ BackdoorSha256\u200b\n</code></pre></p>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20February%202023/#c","title":"C","text":"<pre><code>// Did the communication occur with an intended capability, an unintended capability, or an attacker installed backdoor?\u200b\n// Was the communication inbound, outbound, or did it use a proxy or other intermediary?\u200b\nlet RemoteIpToResearch = '';\u200b\nDeviceNetworkEvents\u200b\n| where RemoteIP == RemoteIpToResearch\u200b\n```\u200b\n\n```kql\n// Was authentication performed during the communication?\u200b\nlet RemoteIpToResearch = '';\u200b\nDeviceLogonEvents\u200b\n| where RemoteIP == RemoteIpToResearch\u200b\n```\u200b\n\n```kql\n// What is the earliest and latest timeframe associated with the communication?\u200b\nlet RemoteIpToResearch = '';\u200b\nDeviceNetworkEvents\u200b\n| where RemoteIP == RemoteIpToResearch\u200b\n| summarize EarliestCommunication = min(Timestamp), LatestCommunication = max(Timestamp) by DeviceId, DeviceName, LocalIP, LocalPort\u200b\n| order by EarliestCommunication asc\u200b\n</code></pre> <pre><code>\u200b// Are there any other potential backdoors associated with the communication?\u200b\nlet RemoteIpToResearch = '';\u200b\nDeviceNetworkEvents\u200b\n| where RemoteIP == RemoteIpToResearch\u200b\n| summarize DistinctDevices = dcount(DeviceId), Events = count() by InitiatingProcessFolderPath, InitiatingProcessSHA256\u200b\n</code></pre>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20January%202023/","title":"KQL Cafe - January 2023","text":"<ul> <li>Recording</li> <li>Presentation</li> </ul>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20January%202023/#hosts","title":"Hosts","text":"<ul> <li>Gianni</li> <li>Alex</li> </ul>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20January%202023/#guests","title":"Guests","text":"<ul> <li>Rogier Dijkman</li> </ul>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20June%202023/","title":"KQL Cafe - June 2023","text":""},{"location":"shownotes/2023/KQL%20Cafe%20-%20June%202023/#recording-and-presentation","title":"Recording and Presentation","text":"<ul> <li>Recording</li> <li>Presentation</li> </ul>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20June%202023/#hosts","title":"Hosts","text":"<ul> <li>Gianni</li> <li>Alex</li> </ul>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20June%202023/#guests","title":"Guests","text":""},{"location":"shownotes/2023/KQL%20Cafe%20-%20May%202023/","title":"KQL Cafe - May 2023","text":""},{"location":"shownotes/2023/KQL%20Cafe%20-%20May%202023/#recording-and-presentation","title":"Recording and Presentation","text":"<ul> <li>Recording</li> <li>Presentation</li> </ul>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20May%202023/#hosts","title":"Hosts","text":"<ul> <li>Gianni</li> <li>Alex</li> </ul>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20May%202023/#guests","title":"Guests","text":""},{"location":"shownotes/2023/KQL%20Cafe%20-%20November%202023/","title":"KQL Cafe 28. November 2023","text":"<ul> <li>Recording</li> <li>Presentation</li> </ul>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20November%202023/#hosts","title":"Hosts","text":"<ul> <li>Gianni</li> <li>Alex</li> </ul>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20November%202023/#guests","title":"Guests","text":"<p>Ugur Koc</p>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20November%202023/#news","title":"News","text":"<ul> <li>Detect malware communication using SSL inspection</li> <li>Analyzing MITRE ATT&amp;CK Detection with KQL</li> <li>KQL Functions For Network Operations</li> <li>DNS requests to suspicious TLDs</li> <li>The KQL Mysteries: Prologue</li> <li>Public Preview: Azure Log Alerts support for Azure Resource Graph (ARG)</li> <li>Azure Monitor Data Collection API Retirement</li> </ul>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20November%202023/#tools","title":"Tools","text":"<ul> <li>KQL Query Helper</li> </ul>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20November%202023/#training","title":"Training","text":"<ul> <li>Hands-On Kusto Query Language (KQL) for Security Analysts</li> </ul>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20November%202023/#learning-kql","title":"Learning KQL","text":""},{"location":"shownotes/2023/KQL%20Cafe%20-%20November%202023/#as-operator","title":"AS operator","text":"<p>run queries at</p> <ul> <li>Log Analytics Demo</li> </ul> <pre><code>Perf\n| take 10\n</code></pre> <pre><code>Perf\n| count\n</code></pre> <pre><code>let Totals = Perf\n| summarize count() by ObjectName, CounterName;\nTotals\n</code></pre> <pre><code>let Totals = Perf\n| summarize count() by ObjectName, CounterName;\nTotals\n</code></pre> <pre><code>let Totals = Perf\n| project TimeGenerated, Computer, ObjectName, CounterName\n;\nTotals\n</code></pre> <pre><code>Perf\n| project TimeGenerated, Computer, ObjectName, CounterName\n| as tPerf\n| summarize count() by ObjectName, CounterName\n| join kind=inner tPerf on ObjectName, CounterName\n</code></pre> <pre><code>let tPerf =  Perf\n| project TimeGenerated, Computer, ObjectName, CounterName\n| summarize count() by ObjectName, CounterName;\nPerf\n| join kind=inner tPerf on ObjectName, CounterName\n</code></pre>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20November%202023/#guest","title":"Guest","text":"<ul> <li>Ugur Koc</li> <li>kqlsearch.com</li> </ul>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20October%202023/","title":"KQL Cafe October 2023","text":""},{"location":"shownotes/2023/KQL%20Cafe%20-%20October%202023/#microsoftgraphactivitylogs","title":"MicrosoftGraphActivityLogs","text":"<pre><code>// Total ingestion in GB\nMicrosoftGraphActivityLogs\n| where TimeGenerated &gt; ago(90d)\n| where _IsBillable == true\n| summarize TotalVolumeGBLog = round(sum(_BilledSize/1024/1024/1024),2)  by bin(TimeGenerated, 1d)\n// Sum all\n| summarize sum(TotalVolumeGBLog)\n</code></pre> <pre><code>// Combine Usage and Log Data\nlet ingestionprice = 5.59;\nlet logsource = \"MicrosoftGraphActivityLogs\";\nlet xusage = Usage\n| where TimeGenerated &gt; ago (30d)\n| where IsBillable == true\n| summarize TotalVolumeGBUsage = round(sum(Quantity/1024),2) by bin(TimeGenerated, 1d), DataType\n| where DataType == (logsource);\nMicrosoftGraphActivityLogs\n| where TimeGenerated &gt; ago  (30d)\n| where _IsBillable == true\n| summarize TotalVolumeGBLog = round(sum(_BilledSize/1024/1024/1024),2)  by bin(TimeGenerated, 1d)\n| join xusage\non $left.TimeGenerated ==  $right.TimeGenerated\n| extend ['Estimated cost'] = TotalVolumeGBLog * ingestionprice\n| summarize sum(TotalVolumeGBUsage), sum(TotalVolumeGBLog)\n</code></pre> <pre><code>MicrosoftGraphActivityLogs\n| take 10\n</code></pre> <pre><code>let AllApps = union isfuzzy=true SigninLogs, AADNonInteractiveUserSignInLogs \n| where TimeGenerated &gt; ago(90d)\n| distinct AppDisplayName, AppId;\nMicrosoftGraphActivityLogs\n| join kind=leftouter AllApps\non $left. AppId == $right.AppId\n| distinct AppId, AppId1, AppDisplayName\n</code></pre>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20October%202023/#app-governance-entra-id-consented-apps-cleanup","title":"App Governance - Entra ID Consented Apps Cleanup","text":"<pre><code>// Activiries with User consented Apps\nlet UserConsentedApps = datatable(AppName:string) [\"Adobe Acrobat\", \"Adobe Acrobat Reader\", \"Adobe Acrobat Reader for PDF\", \"Adobe Sign for Office365\"];\nunion isfuzzy=true SigninLogs, AADNonInteractiveUserSignInLogs \n| where TimeGenerated &gt; ago(90d)\n| where AppDisplayName in (UserConsentedApps)\n| project TimeGenerated, UserPrincipalName, AppDisplayName, AppId\n| summarize Count = count(), Users  = make_set(UserPrincipalName) by AppDisplayName,AppId\n| project AppDisplayName,AppId, Count, TotalUsers = array_length(Users), Users\n</code></pre> <pre><code>// User Consented apps not found in logs\nlet UserConsentedApps = datatable(AppName:string) [\"Adobe Acrobat\", \"Adobe Acrobat Reader\", \"Adobe Acrobat Reader for PDF\", \"Adobe Sign for Office365\"];\nlet AllApps = union isfuzzy=true SigninLogs, AADNonInteractiveUserSignInLogs \n| where TimeGenerated &gt; ago(90d)\n| distinct AppDisplayName;\nUserConsentedApps\n| join kind= leftanti   AllApps\non $left. AppName == $right. AppDisplayName\n</code></pre>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20October%202023/#client-inspector","title":"Client Inspector","text":"<ul> <li>ClientInspector</li> </ul>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20October%202023/#hunting-for-curl","title":"Hunting for Curl","text":"<ul> <li>Hunting for the Curl vulnerability</li> </ul>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20October%202023/#zeek-smtp","title":"Zeek SMTP","text":"<p>inspect SMTP related traffic from MDE Zeek logs</p> <pre><code>// SMTP traffic\nlet lookback = 90d;\nDeviceNetworkEvents\n| where TimeGenerated &gt; ago(lookback)\n| where ActionType == \"SmtpConnectionInspected\"\n| extend json = todynamic(AdditionalFields)\n| extend from = tostring(json.from)\n| extend direction= tostring(json.direction)\n| extend helo = tostring(json.helo)\n| extend last_reply = tostring(json.last_reply)\n| extend mailfrom = tostring(json.mailfrom)\n| extend rcptto= tostring(json.rcptto)\n| extend subject = tostring(json.subject)\n| extend tls = tostring(json.tls)\n| extend rcpttolenght = array_length(parse_json(rcptto))\n| extend fromemail = extract(@\"\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}\\b\",0,tostring(from))\n| project TimeGenerated, DeviceName, LocalIP, RemoteIP, RemotePort, direction, from  mailfrom,fromemail, helo, last_reply, tls, rcptto, rcpttolenght, subject\n</code></pre>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20September%202023/","title":"KQL Cafe September 2023","text":""},{"location":"shownotes/2023/KQL%20Cafe%20-%20September%202023/#zeek","title":"Zeek","text":"<ul> <li>Enrich your advanced hunting experience using network layer signals from Zeek</li> </ul>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20September%202023/#inboundinternetscaninspected","title":"InboundInternetScanInspected","text":"<pre><code>DeviceNetworkEvents\n| where ActionType == \"InboundInternetScanInspected\"\n| project TimeGenerated, DeviceName, LocalIP, LocalPort, RemoteIP, RemotePort, RemoteIPType\n| extend geoinfo = geo_info_from_ip_address(LocalIP)\n| extend country = tostring(geoinfo.country)\n| extend city = tostring(geoinfo.city)\n| extend state = tostring(geoinfo.state)\n| project-away geoinfo\n</code></pre>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20September%202023/#ftp","title":"FTP","text":"<pre><code>DeviceNetworkEvents\n| where ActionType == \"FtpConnectionInspected\"\n| extend json = todynamic(AdditionalFields)\n| extend command = tostring(json.command)\n| extend reply_code = tostring(json.reply_code)\n| extend reply_msg = tostring(json.reply_msg)\n| extend direction = tostring(json.direction)\n| extend user = tostring(json.user)\n| extend arg = tostring(json.arg)\n| extend cwd = tostring(json.cwd)\n</code></pre>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20September%202023/#azure-resource-graph","title":"Azure Resource Graph","text":"<ul> <li>Query Azure Resource Graph from Azure Monitor</li> <li>Query data in Azure Data Explorer and Azure Resource Graph from Azure Monitor</li> <li>Azure Resource Graph table and resource type reference</li> </ul>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20September%202023/#show-all-resource-types","title":"Show all Resource Types","text":"<pre><code>arg(\"\").Resources\n| distinct type\n</code></pre>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20September%202023/#log-analytics-workspace-info","title":"Log Analytics Workspace Info","text":"<pre><code>arg(\"\").Resources\n| where type == \"microsoft.operationalinsights/workspaces\"\n| extend SKUName = tostring(parse_json(tostring(properties.sku)).name)\n| extend dailyQuotaGb = tostring(parse_json(tostring(properties.workspaceCapping)).dailyQuotaGb)\n| extend quotaNextResetTime = todatetime(tostring(parse_json(tostring(properties.workspaceCapping)).quotaNextResetTime))\n| extend retentionInDays = tostring(properties.retentionInDays)\n| project name, location, resourceGroup, retentionInDays,SKUName, dailyQuotaGb, quotaNextResetTime\n</code></pre>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20September%202023/#identify-azure-subscriptions-that-are-not-monitored-by-the-azure-activity-data-connector-in-sentinel","title":"Identify Azure Subscriptions that are not monitored by the Azure Activity Data Connector in Sentinel","text":"<pre><code>// Identify Azure Subscriptions that are not monitored by the Azure Activity Data Connector in Sentinel\nlet allsubscriptions = \narg(\"\").resourcecontainers\n| where type == \"microsoft.resources/subscriptions\"\n| distinct subscriptionId, name;\nallsubscriptions\n| join kind=leftouter  (AzureActivity\n| extend AzureActivitySyubscriptionId = SubscriptionId\n| distinct AzureActivitySyubscriptionId)\non $left. subscriptionId == $right.AzureActivitySyubscriptionId\n| extend IsMonitored = iff(isempty(AzureActivitySyubscriptionId),\"No\",\"Yes\")\n| project subscriptionId, name, AzureActivitySyubscriptionId, IsMonitored\n</code></pre>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20September%202023/#kqlquerycom","title":"KQLQuery.com","text":"<ul> <li>kqlquery.com</li> </ul>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20September%202023/#beta-kql-searchcom","title":"Beta KQL Search.com","text":"<ul> <li>Beta KQL Search</li> </ul>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20September%202023/#graph-operators","title":"Graph Operators","text":"<ul> <li>Graph operators (Preview) - Azure Data Explorer | Microsoft Learn</li> </ul>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20September%202023/#identityinfo","title":"IdentityInfo","text":"<ul> <li>IdentityInfo</li> <li>Identity hunting with an enhanced IdentityInfo table</li> </ul>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20September%202023/#mdi-disabling-accounts-automatic-attack-disruption","title":"MDI Disabling Accounts (Automatic Attack Disruption)","text":"<pre><code>let AllDomainControllers =\n        DeviceNetworkEvents\n        | where TimeGenerated &gt; ago(7d)\n        | where LocalPort == 88\n        | where LocalIPType == \"FourToSixMapping\"\n        | extend DCDevicename = tostring(split(DeviceName,\".\")[0])\n        | distinct DCDevicename;\nIdentityDirectoryEvents\n| where TimeGenerated &gt; ago(190d)\n| where ActionType == \"Account disabled\"\n| extend ACTOR_DEVICE = tolower(tostring(AdditionalFields.[\"ACTOR.DEVICE\"]))\n| where isnotempty( ACTOR_DEVICE)\n| where ACTOR_DEVICE in (AllDomainControllers)\n| project TimeGenerated, TargetAccountDisplayName, ACTOR_DEVICE\n</code></pre>"},{"location":"shownotes/2023/KQL%20Cafe%20-%20September%202023/#set-query-now","title":"Set query now","text":"<pre><code>set query_now = datetime('2023-08-04T14:46:34.3319494Z');\nSigninLogs\n| where TimeGenerated between (ago(1d) .. now())\n</code></pre>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20April%202024/","title":"KQL Cafe - April 2024","text":""},{"location":"shownotes/2024/KQL%20Cafe%20-%20April%202024/#recording-and-presentation","title":"Recording and Presentation","text":"<ul> <li>Recording</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20April%202024/#hosts","title":"Hosts","text":"<ul> <li>Gianni</li> <li>Alex</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20April%202024/#guests","title":"Guests","text":"<ul> <li>Henning Rauch</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20April%202024/#news","title":"News","text":"<ul> <li>Introduction to KQL for Security Analysis</li> <li>Hands-On KQL for Security Analysts</li> <li>Slim's Elite KQL Detection &amp; Cyber Defense Tips</li> <li>The Definitive Guide to KQL: Using Kusto Query Language for Operations, Defending and Threat Hunting</li> <li>Strategies to monitor and prevent vulnerable driver attacksUseful MDE queries</li> <li>Defender for Cloud (CSPM) (Jarkko Kinnunen) KQL for Pricing</li> <li>CloudAppEvents     New columns     LastSeenForUser - Shows how many days back the attribute was recently in use by the user in days (i.e. ISP, ActionType etc.)     UncommonForUser - Lists the attributes in the event that are uncommon for the user, using this data to help rule out false positives and find out anomalies</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20April%202024/#our-guest","title":"Our Guest","text":"<ul> <li>Kusto Query Language (KQL) graph semantics overview (Preview)</li> <li>Graph Operators</li> <li>How Kusto graph semantics can help solve a classic graph problem: the Seven Bridges of K\u00f6nigsberg</li> <li>Manufacturing Ontologies</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20April%202024/#learn-kql-series","title":"Learn KQL - Series","text":"<pre><code>SigninLogs\n| make-series Logons=count() default=0 on TimeGenerated from ago(14d) to now() step 1h\n| extend series_sum=series_sum(Logons)\n</code></pre> <pre><code>SigninLogs\n| make-series Logons=count() default=0 on TimeGenerated from ago(14d) to now() step 1h\n| project series_stats(Logons)\n</code></pre> <pre><code>SigninLogs\n| make-series Logons=count() default=0 on TimeGenerated from ago(14d) to now() step 1h\n| extend series_decompose(Logons)\n</code></pre> <pre><code>SigninLogs\n| make-series Logons=count() default=0 on TimeGenerated from ago(14d) to now() step 1h\n| extend series_decompose(Logons)\n| render timechart \n</code></pre> <pre><code>SigninLogs\n| make-series Logons=count() default=0 on TimeGenerated from ago(14d) to now() step 1h\n| extend outliers=series_outliers(Logons)\n| render timechart \n</code></pre> <pre><code>SigninLogs\n| where TimeGenerated &gt; ago(14d)\n| make-series Logons=count() default=0 on TimeGenerated from ago(14d) to now() step 1h\n| extend series_decompose_anomalies(Logons)\n</code></pre> <pre><code>SigninLogs\n| make-series Logons=count() default=0 on TimeGenerated from ago(14d) to now() step 1h\n| extend series_decompose(Logons)\n| render timechart \n</code></pre> <pre><code>SigninLogs\n| where TimeGenerated &gt; ago(14d)\n| make-series Logons=count() default=0 on TimeGenerated from ago(14d) to now() step 1h\n| extend series_decompose_anomalies(Logons)\n</code></pre> <pre><code>SigninLogs\n| where TimeGenerated &gt; ago(14d)\n| make-series Logons=count() default=0 on TimeGenerated from ago(14d) to now() step 1h\n| extend (AnomaliesDetected, AnomaliesScore, AnomaliesBaseline) = series_decompose_anomalies(Logons)\n| mv-expand Logons to typeof(double), TimeGenerated to typeof(datetime), AnomaliesDetected to typeof(double), AnomaliesScore to typeof(double), AnomaliesBaseline to typeof(long)\n| render timechart  \n</code></pre> <pre><code>SigninLogs\n| where TimeGenerated &gt; ago(14d)\n| make-series Logons=count() default=0 on TimeGenerated from ago(14d) to now() step 1h\n| extend (AnomaliesDetected, AnomaliesScore, AnomaliesBaseline) = series_decompose_anomalies(Logons)\n| mv-expand Logons to typeof(double), TimeGenerated to typeof(datetime), AnomaliesDetected to typeof(double), AnomaliesScore to typeof(double), AnomaliesBaseline to typeof(long)\n| extend AnomaliesDetected = AnomaliesDetected * (AnomaliesBaseline*2)\n| render timechart  \n</code></pre> <pre><code>SigninLogs\n| where TimeGenerated &gt; ago(14d)\n| make-series Logons=count() default=0 on TimeGenerated from ago(14d) to now() step 1h\n| extend (AnomaliesDetected, AnomaliesScore, AnomaliesBaseline) = series_decompose_anomalies(Logons, 1.5, 24, \"linefit\",0,\"tukey\")\n| mv-expand Logons to typeof(double), TimeGenerated to typeof(datetime), AnomaliesDetected to typeof(double), AnomaliesScore to typeof(double), AnomaliesBaseline to typeof(long)\n| extend AnomaliesDetected = AnomaliesDetected * (AnomaliesBaseline*2)\n| render timechart  \n</code></pre> <pre><code>SigninLogs\n| where TimeGenerated &gt; ago(14d)\n| make-series Logons=count() default=0 on TimeGenerated from ago(14d) to now() step 1h\n| extend (AnomaliesDetected, AnomaliesScore, AnomaliesBaseline) = series_decompose_anomalies(Logons, 1.5, 24, \"linefit\",0,\"ctukey\",0.6)\n| mv-expand Logons to typeof(double), TimeGenerated to typeof(datetime), AnomaliesDetected to typeof(double), AnomaliesScore to typeof(double), AnomaliesBaseline to typeof(long)\n| extend AnomaliesDetected = AnomaliesDetected * (AnomaliesBaseline*2)\n| render timechart \n</code></pre>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20April%202024/#what-did-you-do-with-kql-this-month","title":"What did you do with KQL this month","text":"<ul> <li>Defender for Endpoint - Azure Information Protection Client</li> <li>Defender for IoT</li> <li>EntraID - Microsoft Defender for Endpoint - Security Settings Management - Device Registrations</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20April%202024/#azure-files","title":"Azure Files","text":"<pre><code>StorageFileLogs\n| where Uri contains \u201cSuspiciousFilename.txt\"\n| where Category == \"StorageWrite\" and\n    OperationName == \"Write\" and \n    StatusCode == \"0\"\n| project-reorder TimeGenerated, LastModifiedTime, SmbPrimarySID, CallerIpAddress\n</code></pre> <pre><code>StorageFileLogs\n| where TimeGenerated &gt; ago(90d)\n| where _IsBillable == true\n| summarize TotalVolumeGBLog = round(sum(_BilledSize/1024/1024/1024),2)  by bin(TimeGenerated, 1d) \n// Sum all\n| summarize sum(TotalVolumeGBLog)\n</code></pre>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20August%202024/","title":"KQL Cafe - August 2024","text":""},{"location":"shownotes/2024/KQL%20Cafe%20-%20August%202024/#recording-and-presentation","title":"Recording and Presentation","text":"<ul> <li>Recording</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20August%202024/#hosts","title":"Hosts","text":"<ul> <li>Gianni</li> <li>Alex</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20August%202024/#guests","title":"Guests","text":"<ul> <li>Truvis Thornton</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20August%202024/#news","title":"News","text":""},{"location":"shownotes/2024/KQL%20Cafe%20-%20August%202024/#kql-simple-mode-in-log-analytics","title":"KQL Simple Mode in Log Analytics","text":"<ul> <li>Analyze data using Log Analytics Simple mode (Preview)</li> </ul> <p>Here's some instuctions if you wnat to change the default behaviour for KQL simple mode in log analytics.</p> <p> </p>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20August%202024/#detect-compromised-rdp-sessions-with-microsoft-defender-for-endpoint","title":"Detect compromised RDP sessions with Microsoft Defender for Endpoint","text":"<ul> <li>Detect compromised RDP sessions with Microsoft Defender for Endpoint</li> </ul> <p>Note:</p> <ul> <li>Additional properties not yet synched to Sentinel</li> <li>Potential additional data volume when storing in Sentinel</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20August%202024/#hunting-for-copilot-activities","title":"Hunting for Copilot Activities","text":"<p>Use this query to hunt for Copilot activities</p> <pre><code>CloudAppEvents\n| where ActionType == @\"CopilotInteraction\u201c\n</code></pre> <ul> <li>KQL queries</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20August%202024/#identify-outdated-devices-through-signin-logs","title":"Identify outdated devices through SignIn Logs","text":"<p>Hunt for outdated devices using the Entra ID signin logs</p> <pre><code>union isfuzzy=true SigninLogs, AADNonInteractiveUserSignInLogs| where ResultType != 0 and ResultDescription == \"Other\"| where ResultType == \"500061\"| distinct Category, Identity\n</code></pre> <ul> <li>What\u2019s new in Microsoft Entra \u2013 June 2024</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20August%202024/#steven-lims-aweseome-kql-queries-are-now-available-on-github-and-kqlsearchcom","title":"Steven Lim\u2019s aweseome KQL queries are now available on GitHub and KQLSearch.com","text":"<ul> <li>Steven Lim's KQL queries are now available on GitHub and in KQLSearch</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20August%202024/#microsoft-sentinel-summary-rules","title":"Microsoft Sentinel - Summary Rules","text":"<p>Check out this new feature in Microsoft Sentinel</p> <p></p> <ul> <li>Aggregate data in a Log Analytics workspace by using summary rules (Preview)</li> <li>Aggregate Microsoft Sentinel data with summary rules (preview)</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20August%202024/#guest-speaker-truvis-thornton","title":"Guest Speaker Truvis Thornton","text":"<ul> <li>Truvis Thornton</li> </ul> <p>Truvis talked about using AuditD with Microsoft Sentinel</p> <ul> <li>Commandline Auditing \u2014 Using different tools [AuditD, Snoopy, PSAcct and Native solutions] to monitor security on your Linux server environments</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20August%202024/#what-did-you-do-with-kql-this-month","title":"What did you do with KQL this month?","text":"<p>Gianni talked about how to detect OneDrive activities using the Microsoft Grpah Activitylogs</p> <p><code>kql MicrosoftGraphActivityLogs  | where RequestUri endswith \"/content\" or RequestUri contains \"/content?format=\" | where ResponseStatusCode == 200  | where RequestMethod == \"GET\"  | where RequestUri matches regex      @\"https://graph.microsoft.com/(beta|v1.0)/(drives|groups|shares|me|sites|users|drive)/\"</code>kql</p>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20February%202024/","title":"KQL Cafe - 27. February 2024","text":""},{"location":"shownotes/2024/KQL%20Cafe%20-%20February%202024/#recording-and-presentation","title":"Recording and Presentation","text":"<ul> <li>Recording</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20February%202024/#hosts","title":"Hosts","text":"<ul> <li>Gianni</li> <li>Alex</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20February%202024/#guests","title":"Guests","text":"<ul> <li>Fabian Bader </li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20February%202024/#news","title":"News","text":"<ul> <li>Learn KQL in one month</li> <li>KQL Queries for Intune</li> <li>Function: ListAllActionsAndOperations()</li> <li>Device Isolation Notification</li> <li>Update records in ADX</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20February%202024/#learn-kql","title":"Learn KQL","text":"<p>Prev Next</p>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20February%202024/#guest","title":"Guest","text":"<p>Fabian Bader CloudBrothers GitHub</p>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20February%202024/#what-did-you-do-with-kql-this-month","title":"What did you do with KQL this month?","text":""},{"location":"shownotes/2024/KQL%20Cafe%20-%20February%202024/#monitoring-windows-built-in-local-security-groups-with-microsoft-defender-xdr-or-sentinel","title":"Monitoring Windows built-in local security Groups with Microsoft Defender XDR or Sentinel","text":"<ul> <li>Monitoring Windows built-in local security Groups with Microsoft Defender XDR or Sentinel</li> <li>KQL</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20February%202024/#microsoft-sentinel-taxii-connector-failures","title":"Microsoft Sentinel - TAXII Connector failures","text":"<ul> <li>KQL</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20February%202024/#auditing-defender-controlled-folder-access","title":"Auditing Defender Controlled Folder Access","text":""},{"location":"shownotes/2024/KQL%20Cafe%20-%20January%202024/","title":"KQL Cafe - 31. February 2024","text":""},{"location":"shownotes/2024/KQL%20Cafe%20-%20January%202024/#recording-and-presentation","title":"Recording and Presentation","text":"<ul> <li>Recording</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20January%202024/#hosts","title":"Hosts","text":"<ul> <li>Gianni</li> <li>Alex</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20January%202024/#guests","title":"Guests","text":"<ul> <li>Ilana Waitser</li> <li>Elyran Malka</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20January%202024/#news","title":"News","text":"<ul> <li>The Definitive Guide to KQL: Using Kusto Query Language for Operations, Defending, and Threat Hunting</li> <li>K7Cyber</li> <li>KQL Security Sources - 2024 Update</li> <li>A Deep Dive into the KQL Union Operator</li> <li>Extracting Nested Fields in Kusto</li> <li>Harnessing threat intelligence using externaldata operator</li> <li>Query data in Azure Monitor using Azure Data Explorer</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20January%202024/#learn","title":"Learn","text":"<ul> <li>What are SIGMA Rules</li> <li>Converting Sigma to KQL Online</li> <li>Sigma to KQL Backend</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20January%202024/#what-did-you-do-with-kql-this-month","title":"What did you do with KQL this month?","text":"<ul> <li>Microsoft Defender for Endpoint \u2013 Streamlined Connectivity Monitoring</li> <li>Microsoft Defender XDR \u2013 Threat Protection Reporting</li> <li>Detecting Defender 365 Forwarding Rules policy changes</li> <li>HTML smuggling surges: Highly evasive loader technique increasingly used in banking malware, targeted attacks</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20June%202024/","title":"KQL Cafe - June 2024","text":""},{"location":"shownotes/2024/KQL%20Cafe%20-%20June%202024/#recording-and-presentation","title":"Recording and Presentation","text":"<ul> <li>Recording</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20June%202024/#hosts","title":"Hosts","text":"<ul> <li>Gianni</li> <li>Alex</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20June%202024/#guests","title":"Guests","text":"<ul> <li>Michalis Michalos</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20June%202024/#news","title":"News","text":"<ul> <li>Analyze data using Log Analytics Simple mode (Preview)</li> <li>Microsoft Defender for Endpoint Advanced Hunting and Application Control for Business \u2013 WDACConfig</li> <li>Detect suspicious processes running on hidden desktops</li> <li> <p>Audit Defender XDR Activities</p> </li> <li> <p>Microsoft Employee Submitted Queries</p> </li> </ul> <p>You will find queries for the following use cases:</p> <ul> <li>Monitoring Cosmos DB's request unit consumption.</li> <li>Identifying top N queries by consumption in Cosmos DB.</li> <li>Checking for requests that are throttled in Cosmos DB.</li> <li>Checking for antivirus exclusions.</li> <li>Identifying applications using auto proxy (WPAD).</li> <li>Detecting changes to evade detection.</li> <li>Analyzing Microsoft Graph API usage patterns.</li> <li>Analyzing traffic patterns to Microsoft Graph APIs.</li> <li>Monitoring ID Governance in Microsoft Entra for usage patterns.</li> <li>Visualizing authentication method use over time.</li> <li>Understanding administrative activities.</li> <li>Monitoring short-lived connections in PostgreSQL.</li> <li>Monitoring failed login attempts in PostgreSQL.</li> <li>Resource utilization monitoring in PostgreSQL.</li> <li>Summarizing sign-ins via iOS and macOS SSO Extensions.</li> <li>Searching for MFA phone number changes using regex.</li> <li>Tracking dynamic group membership changes.</li> <li>Session breakdown by legacy vs modern TLS.</li> <li>Understanding email authentication patterns for security.</li> <li>Monitoring token protection impact and managing conditional access.</li> <li>Analyzing Intune device management events and enrollments.</li> <li>Monitoring failed operations and sign-in events.</li> <li>Network traffic monitoring.</li> <li>Identity governance operations.</li> <li>Detecting suspicious activities and anomalies.</li> <li>Identifying vulnerabilities and attack surfaces via IP range and CVE ID tracking.</li> <li>Detecting administrative actions and user re-enabling.</li> <li>High-risk sign-in patterns detection.</li> <li>Reporting on antimalware versions.</li> <li>Detecting email anomalies.</li> <li>Performance troubleshooting for SQL servers.</li> <li>Monitoring conditional access policy applications and failures</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20June%202024/#our-guest-michalis-michalos","title":"Our Guest Michalis Michalos","text":"<p>Our guest Michalis Michalos spoke about Defender for Endpoint and WSL.</p> <p>Keeping an eye on WSL through Microsoft Defender for Endpoint</p> <p>Identify endpoints that run WSL and/or MDE plug-in First things first, let\u2019s identify endpoints that users run WSL with the following KQL:</p> <pre><code>DeviceProcessEvents\n| where ActionType has \"ProcessCreated\"\n| where ProcessVersionInfoOriginalFileName has \"wsl.exe\"\n| where ProcessVersionInfoFileDescription has \"Windows Subsystem for Linux\"\n| summarize by DeviceName\n</code></pre> <p>You can also identify which of your endpoints already have the MDE plug-in:</p> <pre><code>DeviceTvmSoftwareInventory\n| where SoftwareName has \"microsoft_defender_for_endpoint_plug-in_for_wsl\"\n| summarize by DeviceName\n</code></pre> <p>Joining forces from the queries above, you can identify endpoints running WSL but don\u2019t have the plug-in installed:</p> <pre><code>let WSLDevices = DeviceProcessEvents\n| where ActionType has \"ProcessCreated\"\n| where ProcessVersionInfoOriginalFileName has \"wsl.exe\"\n| where ProcessVersionInfoFileDescription has \"Windows Subsystem for Linux\"\n| project DeviceName;\nWSLDevices\n    | join kind=leftanti (DeviceTvmSoftwareInventory\n    | where SoftwareName has \"microsoft_defender_for_endpoint_plug-in_for_wsl\"\n    | project DeviceName\n) on DeviceName\n</code></pre> <p>A simple hunt to begin with could be the following, looking for reconnaissance  activity:</p> <pre><code>let WSLSuspicousList = dynamic([\"whoami\", \"uname\", \"find\", \"grep\", \"cron -l\", \"/etc/shadow\", \"/etc/passwd\", \"/etc/sudoers\", \"w\"]); \nlet TimeFrame = 30d; // Choose the best timeframe for your investigation\nDeviceInfo\n    | where RegistryDeviceTag has \"WSL2\"\n    | project DeviceId\n| join ( DeviceProcessEvents\n    | where Timestamp &gt; ago(TimeFrame)\n    | where ActionType == \"ProcessCreated\"\n    | where ProcessCommandLine has_any (WSLSuspicousList)\n    | project TimeGenerated, WSLDeviceID = DeviceId, DeviceName, FileName, FolderPath, ProcessId, ProcessCommandLine, AccountDomain, AccountName\n    )\non $left.DeviceId == $right.WSLDeviceID\n| sort by TimeGenerated desc\n</code></pre> <p>Check out the above referenced blog post for more KQL for WSL.</p>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20June%202024/#learn-kql","title":"Learn KQL","text":"<pre><code>search \"*castaldi*\"\n</code></pre> <pre><code>union withsource=Tables *\n</code></pre> <pre><code>MicrosoftGraphActivityLogs\n| where * contains \"200\"\n</code></pre> <pre><code>MicrosoftGraphActivityLogs\n| where ResponseStatusCode == \"200\"\n| join kind=inner AADNonInteractiveUserSignInLogs on $left.SignInActivityId == $right.UniqueTokenIdentifier\n| project-away *1\n</code></pre> <pre><code>SigninLogs\n| summarize arg_max(TimeGenerated,*) by ResultType\n| project-keep TimeGenerated, OperationName, AppDisplayName, Risk*\n</code></pre>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20June%202024/#what-did-you-do-with-kql-this-month","title":"What did you do with KQL this month","text":""},{"location":"shownotes/2024/KQL%20Cafe%20-%20June%202024/#monitor-azure-automation-account-runbooks","title":"Monitor Azure Automation Account Runbooks","text":"<pre><code>AzureDiagnostics\n| where Category == 'JobLogs'\n| extend RunbookName = RunbookName_s\n| project TimeGenerated,RunbookName,ResultType,CorrelationId,JobId_g\n| summarize StartTime = minif(TimeGenerated,ResultType == 'Started'),EndTime = minif(TimeGenerated,ResultType in ('Completed','Failed','Failed')),\nStatus = tostring(parse_json(make_list_if(ResultType,ResultType in ('Completed','Failed','Stopped')))[0]) by JobId_g,RunbookName\n| extend DurationSec = datetime_diff('second', EndTime,StartTime)\n| join kind=leftouter (AzureDiagnostics\n| where Category == \"JobStreams\"\n| where StreamType_s == \"Error\"\n| summarize TotalErrors = dcount(StreamType_s) by JobId_g, StreamType_s)\non $left. JobId_g == $right. JobId_g\n| extend HasErrors = iff(StreamType_s == 'Error',true,false)\n| project StartTime, EndTime, DurationSec,RunbookName,Status,HasErrors,TotalErrors,JobId_g\n</code></pre>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20June%202024/#defender-for-endpoint-internet-facing-devices","title":"Defender for Endpoint - internet-facing devices","text":"<ul> <li>Defender for Endpoint - internet-facing devices</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20June%202024/#ja3","title":"JA3","text":"<p>show all SSL connections</p> <pre><code>DeviceNetworkEvents\n| where ActionType == \"SslConnectionInspected\"\n</code></pre> <p>show all SSL connections and additional details (unpacked)</p> <pre><code>DeviceNetworkEvents\n| where ActionType == \"SslConnectionInspected\"\n| extend AF = parse_json(AdditionalFields)\n| evaluate bag_unpack(AF)\n</code></pre> <p>show all SSL connections and join on successfull device network events to iidentify the executable JA3 (Client)</p> <pre><code>DeviceNetworkEvents\n| where ActionType == \"SslConnectionInspected\"\n| extend Array = parse_json(AdditionalFields)\n| join kind=inner (\nDeviceNetworkEvents \n| where ActionType == \"ConnectionSuccess\"\n) on DeviceId, LocalIP, LocalPort, RemoteIP, RemotePort\n| extend JA3 = tostring(Array.ja3), JA3S = tostring(Array.ja3s)\n| summarize count() by Client = JA3, \n//Server = JA3S, \nInitiatingProcessFileName1, InitiatingProcessVersionInfoProductVersion1\n\n\nshow all SSL connections and count the successfull connections to a JA3S (Server)\n\n```kql\nDeviceNetworkEvents\n| where ActionType == \"SslConnectionInspected\"\n| extend Array = parse_json(AdditionalFields)\n| join kind=inner (\nDeviceNetworkEvents \n| where ActionType == \"ConnectionSuccess\"\n) on DeviceId, LocalIP, LocalPort, RemoteIP, RemotePort\n| extend JA3 = tostring(Array.ja3), JA3S = tostring(Array.ja3s)\n| summarize count() by Server = JA3S, \nInitiatingProcessFileName1, InitiatingProcessVersionInfoProductVersion1, RemoteIP\n</code></pre>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20March%202024/","title":"KQL Cafe - 26. March 2024","text":""},{"location":"shownotes/2024/KQL%20Cafe%20-%20March%202024/#recording-and-presentation","title":"Recording and Presentation","text":"<ul> <li>Recording</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20March%202024/#hosts","title":"Hosts","text":"<ul> <li>Gianni</li> <li>Alex</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20March%202024/#guests","title":"Guests","text":"<ul> <li>Purav Desai</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20March%202024/#notes","title":"Notes","text":"<ul> <li>A Common KQL Mistake in Threat Hunting and Detection Engineering</li> <li>Microsoft Security Exposure Management</li> <li>Unraveling the Mysteries of Kusto's Parse-Kv Operator: A Deep Dive</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20March%202024/#learning-kql-exposure-management","title":"Learning KQL - Exposure Management","text":"<p>https://learn.microsoft.com/en-us/microsoft-365/security/defender/advanced-hunting-exposuregraphnodes-table?view=o365-worldwide https://learn.microsoft.com/en-us/security-exposure-management/schemas-operators</p>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20March%202024/#what-did-you-do-with-kql-this-month","title":"What did you do with KQL this month?","text":"<ul> <li> <p>Microsoft Security Exposure Management - Remote Desktop Protocol (RDP)</p> </li> <li> <p>Microsoft Security Exposure Management - Managed Identity</p> </li> <li> <p>Microsoft Security Exposure Management \u2013 Critical Assets</p> </li> <li> <p>Parse Netsh advfirewall commands</p> </li> <li> <p>Stream and filter data from Windows DNS servers with the AMA connector</p> </li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20May%202024/","title":"KQL Cafe - May 2024","text":""},{"location":"shownotes/2024/KQL%20Cafe%20-%20May%202024/#recording-and-presentation","title":"Recording and Presentation","text":"<ul> <li>Recording</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20May%202024/#hosts","title":"Hosts","text":"<ul> <li>Gianni</li> <li>Alex</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20May%202024/#guests","title":"Guests","text":"<p>Nicola Suter</p>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20May%202024/#news","title":"News","text":"<ul> <li>Definitive Guide to KQL Released</li> <li> <p>The CloudAuditEvents table in the advanced hunting schema contains information about cloud audit events for various cloud platforms protected by the organization's Microsoft Defender for Cloud</p> </li> <li> <p>Hunting in Azure subscriptions - Guidance</p> </li> <li>Microsoft Security Exposure Management (XSPM) Overview Part 1</li> <li>Microsoft Security Exposure Management (XSPM) Overview Part 2</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20May%202024/#guest","title":"Guest","text":"<p>Nicola Suter</p>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20May%202024/#what-did-you-do-with-kql-this-month","title":"What did you do with KQL this month?","text":"<ul> <li>Journey with Microsoft Security: From CASB to Project Breeze</li> <li>Microsoft Sentinel benefit for Microsoft 365 E5, A5, F5, and G5 customers</li> <li>KQL Query</li> <li>EntraID - Group Membership changes - Dynamic Group memberships</li> <li>Microsoft Defender for Identity - Attack Disruption</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20November%202024/","title":"KQL Cafe - November 2024","text":""},{"location":"shownotes/2024/KQL%20Cafe%20-%20November%202024/#recording-and-presentation","title":"Recording and Presentation","text":"<ul> <li>Recording</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20November%202024/#hosts","title":"Hosts","text":"<ul> <li>Gianni</li> <li>Alex</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20November%202024/#guests","title":"Guests","text":"<ul> <li>Mehmet Ergene</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20November%202024/#kql-news","title":"KQL News","text":""},{"location":"shownotes/2024/KQL%20Cafe%20-%20November%202024/#kustocon-recap","title":"KustoCon Recap","text":"<p>We had a great first KustoCon conference. Check out the session recordings here</p>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20November%202024/#add-icons-to-our-kql-query-results","title":"Add icons to our KQL query results","text":"<p>Idea from Sergio Albea</p> <p>This one is actually pretty handy,  we can add icons to our KQL query results! They bring a more visual (and dare I say, 'fancy') way to tell different results apart.</p> <pre><code>DeviceEvents\n| where ActionType == \"TamperingAttempt\"\n| extend OriginalRegistryValue = tostring(parse_json(AdditionalFields).OriginalValue)\n| extend Status = tostring(parse_json(AdditionalFields).Status)\n| extend TamperingAction = tostring(parse_json(AdditionalFields).TamperingAction)\n| extend AttemptedRegistryValue = tostring(parse_json(AdditionalFields).TamperingAttemptedValue)\n| where TamperingAction == \"RegistryModification\"\n| extend TamperingAttemptStatus = case(\n Status contains \"Blocked\", 0,\n Status contains \"Ignored\", 1,\n -1 )// Default value if neither \"Blocked\" nor \"Ignored\" is found)\n| extend Status_Result = iif(TamperingAttemptStatus == 0,'\ud83d\udfe9\ud83d\udca1','\ud83d\udfe5\ud83d\udea8')\n| distinct DeviceName, TamperingAction, Status_Result,Status, OriginalRegistryValue, AttemptedRegistryValue\n</code></pre>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20November%202024/#save-money-on-your-sentinel-ingestion-costs-with-data-collection-rules","title":"Save money on your Sentinel ingestion costs with Data Collection Rules","text":"<p>This blog post explores an effective strategy to optimize data management by reducing log data volume while retaining critical information. It explains how to use Data Collection Rules (DCRs) to filter out less valuable log information, saving costs on data ingress and long-term storage while minimizing analyst fatigue. The post covers the decision-making process for identifying essential log data and provides step-by-step examples of applying DCRs to streamline log collection efficiently.</p> <p>blog</p>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20November%202024/#country-and-region-information-in-current_principal_details","title":"Country and Region Information in current_principal_details","text":"<p>Kusto has introduced a new feature that allows users to access information about the country of a user and their tenant region or country as provided by Microsoft Entra ID through the current_principal_details() function. This addition provides enhanced granularity and control in data security and accessibility.</p> <p>Blog current_principal_details()</p>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20November%202024/#defender-xdr-arg-operator","title":"Defender XDR \u2013 arg() Operator","text":"<p>(GA) The arg() operator in advanced hunting in Microsoft Defender portal is now generally available. Users can now use the arg() operator for Azure Resource Graph queries to search over Azure resources, and no longer need to go to Log Analytics in Microsoft Sentinel to use this operator if already in Microsoft Defender.</p> <p>Release Notes</p>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20November%202024/#defender-xdr-cloudprocessevents","title":"Defender XDR - CloudProcessEvents","text":"<p>(Preview) The CloudProcessEvents table is now available for preview in advanced hunting. It contains information about process events in multicloud hosted environments such as Azure Kubernetes Service, Amazon Elastic Kubernetes Service, and Google Kubernetes Engine. You can use it to discover threats that can be observed through process details, like malicious processes or command-line signatures.</p> <p>CloudProcessEvents (Preview)</p>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20November%202024/#guest","title":"Guest","text":"<ul> <li>Mehmet Ergene</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20November%202024/#time-travel-in-kql","title":"Time Travel in KQL","text":"<p>The basics</p> <pre><code>// must set the datetimescope_column\n// set query_datetimescope_column = \"TimeGenerated\";\n// set query_datetimescope_from = datetime(2024-09-01 19:16:00);\n// set query_datetimescope_to = datetime(2024-09-14 19:16:00);\n// set query_now = datetime(2023-09-14 19:16:00);\nAADNonInteractiveUserSignInLogs\n| where TimeGenerated &gt; ago(30d)\n| summarize min(TimeGenerated), max(TimeGenerated), count()\n</code></pre> <p>Testing the query as of certain dates in the past without modifying the now() and ago() parts.</p> <pre><code>// Author: MattZorich (reprise_99)\n//Detect anomalies in the amount of conditional access failures by users in your tenant, then visualize those conditional access failures\n//Data connector required for this query - Azure Active Directory - Signin Logs\n//Starttime and endtime = which period of data to look at, i.e from 21 days ago until today.\nset query_datetimescope_column = \"TimeGenerated\";\nset query_datetimescope_from = datetime(2024-07-01 19:16:00);\nset query_datetimescope_to = datetime(2024-11-24 19:16:00);\nset query_now = datetime(2024-11-24 19:16:00);\nlet startdate=21d;\nlet enddate=1d;\n//Timeframe = time period to break the data up into, i.e 1 hour blocks.\nlet timeframe=1h;\n//Sensitivity = the lower the number the more sensitive the anomaly detection is, i.e it will find more anomalies, default is 1.5\nlet sensitivity=0;\n//Threshold = set this to tune out low count anomalies, i.e when total failures for a user doubles from 1 to 2\nlet threshold=5;\nlet outlierusers=\n    SigninLogs\n    | where TimeGenerated between (startofday(ago(startdate))..startofday(ago(enddate)))\n    | where ResultType == 53003\n    | project TimeGenerated, ResultType, UserPrincipalName\n    | make-series CAFailureCount=count() on TimeGenerated from startofday(ago(startdate)) to startofday(ago(enddate)) step timeframe by UserPrincipalName \n    | extend outliers=series_decompose_anomalies(CAFailureCount, sensitivity)\n    | mv-expand TimeGenerated, CAFailureCount, outliers\n    | where outliers == 1 and CAFailureCount &gt; threshold\n    | distinct UserPrincipalName\n    ;\n//Optionally visualize the anomalies\nSigninLogs\n| where TimeGenerated between (startofday(ago(startdate))..startofday(ago(enddate)))\n| where ResultType == \"53003\"\n| project TimeGenerated, ResultType, UserPrincipalName\n| where UserPrincipalName in (outlierusers)\n| summarize CAFailures=count()by UserPrincipalName, bin(TimeGenerated, timeframe)\n| render timechart with (ytitle=\"Failure Count\",title=\"Anomalous Conditional Access Failures\")\n</code></pre>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20November%202024/#what-did-you-do-with-kql-this-month","title":"What did you do with KQL this month?","text":""},{"location":"shownotes/2024/KQL%20Cafe%20-%20November%202024/#azure-devops-organization-policy-change-monitoring","title":"Azure DevOps \u2013 Organization Policy Change Monitoring","text":"<p>Alex prepared some additional queries to detect Azure DevOps Organization / Project policy chnages:</p> <ul> <li>AzureDevOps - Additional Protection when using public package registries</li> <li>AzureDevOps - Allow Public Projects</li> <li>AzureDevOps - Enable IP Conditional Access policy validation</li> <li>AzureDevOps - External Guest Access</li> <li>AzureDevOps - Log Audit Events</li> <li>AzureDevOps - SSH Authentication --AzureDevOps - Third-Party application Access via OAuth</li> </ul> <p>Queries</p>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20October%202024/","title":"KQL Cafe - October 2024","text":""},{"location":"shownotes/2024/KQL%20Cafe%20-%20October%202024/#recording-and-presentation","title":"Recording and Presentation","text":"<ul> <li>Recording </li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20October%202024/#hosts","title":"Hosts","text":"<ul> <li>Gianni</li> <li>Alex</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20October%202024/#guests","title":"Guests","text":"<ul> <li>Koos Goosens</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20October%202024/#news","title":"News","text":""},{"location":"shownotes/2024/KQL%20Cafe%20-%20October%202024/#kustocon","title":"KustoCon","text":"<ul> <li>KustoCon Online Conference</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20October%202024/#mc906487-microsoft-defender-xdr-initiatingprocessfolderpath-changes-to-include-file-names","title":"MC906487 - Microsoft Defender XDR: InitiatingProcessFolderPath changes to include file names","text":"<p>Microsoft Defender for Endpoint will update the InitiatingProcessFolderPath to include file names in all tables, affecting Windows activity. This change will be globally available on November 4, 2024, requiring updates to custom detection rules and queries.</p> <p>Before this rollout, the InitiatingProcessFolderPath column is inconsistent across action types. Some columns include the file name, and other columns do not include the file name. After the rollout, all Microsoft Defender for Endpoint action types across all tables will report the full path including the file name of the initiating process in the InitiatingProcessFolderPath column.</p> <p>Consider the following example to be the new normal, InitiatingProcessFolderPath == c:\\temp\\file.exe An example of a possible current implementation that will be retired with this change: InitiatingProcessFolderPath == c:\\temp\\ Custom detection rules and queries considering the InitiatingProcessFolderPath may be affected.</p> <ul> <li>Source: Details</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20October%202024/#unleash-the-power-of-devicetvminfogathering","title":"Unleash The Power Of DeviceTvmInfoGathering","text":"<ul> <li>Blogpost from Bet-Jan Cyber</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20October%202024/#rod-trent-shared-his-session-content-from-the-midwest-management-summit-flamingo-edition-2024","title":"Rod Trent shared his session content from the Midwest Management Summit Flamingo Edition 2024","text":"<ul> <li>Slides and Presentation</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20October%202024/#kql-threathunting-with-johndcyber","title":"KQL Threathunting with JohnDCyber","text":"<p>Explore a collection of KQL queries crafted for dynamic threat hunting across a diverse range of topics, techniques, and use cases!  These queries are designed as your launchpad\u200a-\u200aready to be tailored to your unique environment and evolving threat landscape.  </p> <ul> <li>Source</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20October%202024/#azure-mfa-enforcement","title":"Azure MFA Enforcement","text":"<p>Nicola Suter wrote some KQL queries regarding the mandatory multifactor authentication for Azure and other admin portals by Microsoft.</p> <ul> <li> <p>Source</p> </li> <li> <p>Planning for mandatory multifactor authentication for Azure and other admin portals</p> </li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20October%202024/#defender-for-cloud-apps-shadow-reporting","title":"Defender for Cloud Apps \u2013 Shadow Reporting","text":"<p>If you have queries on McasShadowItReporting note the value change for the StreamName for MDE data</p> <p>Possible vlaues in StreamName for MDE are:</p> <ul> <li>Defender-managed-endpoints</li> <li>Win10 Endpoint Users</li> </ul> <p>Defender-managed-endpoints refers to all Windows and Mac devices onboarded in MDE that gather network data and share this with Defender for Cloud Apps for Shadow IT discovery. Win10 Endpoint Users is the old name of the stream</p>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20October%202024/#our-guest","title":"Our Guest","text":"<ul> <li>Koos Goosens</li> <li>Koos Blog</li> <li> <p>Koos GitHub</p> </li> <li> <p>Unlimited Advanced Hunting for Microsoft 365 Defender with Azure Data Explorer</p> </li> <li>Split up your logs with $pl1tR</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20October%202024/#what-did-you-do-with-kql-this-month","title":"What did you do with KQL This month?","text":""},{"location":"shownotes/2024/KQL%20Cafe%20-%20October%202024/#mde-defender-antivirus-exclusion-enumeration-activities","title":"MDE - Defender Antivirus Exclusion Enumeration activities","text":"<ul> <li>Source</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20October%202024/#mitigations-for-cve-2024-38124-implement-monitoring-for-any-suspicious-renaming-activities-of-computers-within-the-network","title":"Mitigations for CVE-2024-38124 - Implement monitoring for any suspicious renaming activities of computers within the network","text":"<ul> <li>Source</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20October%202024/#mde-defaultlocaladmin-logon","title":"MDE-DefaultLocalAdmin-Logon","text":"<p>Contribution from Loris Ambrozzo</p> <p>This KQL query identifies logon events for the default local administrator (.\\Administrator) with SID starting with S-1-5 and ending with 500 (according well-know SIDs). As the default domain administrator also starts with S-1-5 and ends with -500, the query includes a table containing the default domain administrator's SID of the domain to exclude these logons.</p> <ul> <li>Source</li> </ul>"},{"location":"shownotes/2024/KQL%20Cafe%20-%20October%202024/#defender-deployment-rings","title":"Defender deployment Rings","text":"<p>Gianni shared a few queries to gather Defender Antivirus deployment Ring information.</p> <ul> <li>Deploy Microsoft Defender Antivirus in rings</li> </ul> <pre><code>DeviceTvmInfoGathering\n| extend AF = parse_json(AdditionalFields)\n</code></pre> <pre><code>DeviceTvmInfoGathering\n| extend AF = parse_json(AdditionalFields)\n| evaluate bag_unpack(AF)\n</code></pre> <pre><code>DeviceTvmInfoGathering\n| extend AF = parse_json(AdditionalFields)\n| evaluate bag_unpack(AF)\n| project-keep *Signature*\n</code></pre> <pre><code>DeviceTvmInfoGathering\n| extend AF = parse_json(AdditionalFields)\n| evaluate bag_unpack(AF)\n| project-keep *Signature*, LastSeenTime\n</code></pre> <pre><code>DeviceTvmInfoGathering\n| extend AF = parse_json(AdditionalFields)\n| evaluate bag_unpack(AF)\n| project-keep *Signature*, LastSeenTime, DeviceId\n| join kind=inner (DeviceInfo | summarize arg_max(Timestamp,*) by DeviceId) on DeviceId\n</code></pre>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20April%202025/","title":"KQL Cafe - April 2025","text":""},{"location":"shownotes/2025/KQL%20Cafe%20-%20April%202025/#recording","title":"Recording","text":"<ul> <li>Recording</li> </ul>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20April%202025/#hosts","title":"Hosts","text":"<ul> <li>Gianni</li> <li>Alex</li> </ul>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20April%202025/#guests","title":"Guests","text":"<ul> <li>Bert-Jan</li> </ul>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20April%202025/#kql-news","title":"KQL News","text":""},{"location":"shownotes/2025/KQL%20Cafe%20-%20April%202025/#just-another-kusto-hacker-jakh","title":"Just another Kusto hacker (JAKH)","text":"<p>Your challenge is to write a Kusto query that outputs the string \"Just another Kusto hacker\". The query can be as simple or as complex as you like, as long as it is self-contained and can run on any Fabric EventHouse or Azure Data Explorer cluster.</p> <p>Source</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20April%202025/#kustocon-2025-anouncement","title":"KustoCon 2025 Anouncement","text":"<p>KustoCon will run on November 6th, 2025</p> <p>This year the KustoCon Conference will run in Hybrid Mode. With exclusive Workshops in the morning for those attending onsite and KustoCon sessions in the afternoon for both onsite and online participants.</p> <p>We will share more details soon on KustoCon.com</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20April%202025/#the-ultimate-kusto-detective-challenge-call-of-the-cyber-duty","title":"The Ultimate Kusto Detective Challenge - Call of the Cyber Duty","text":"<p>There's a new Kusto Detective Agency challenge comming. This time you play in a team.</p> <p>Your mission, should you choose to accept it: uncover the truth hidden in the data \u2014 and maybe, just maybe, save the world. Our headquarters are in Digitown \u2014 the world\u2019s first fully observable city, where data isn\u2019t just stored... it\u2019s alive..........</p> <p>Intro Video Register Cyber Duty Rules</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20April%202025/#oauthappinfo","title":"OAuthAppInfo","text":"<p>The OAuthAppInfo table in the advanced hunting schema contains information about Microsoft 365-connected OAuth applications in the organization that are registered with Microsoft Entra ID and available in the Microsoft Defender for Cloud Apps app governance capability.</p> <p>Source</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20April%202025/#changes-to-the-identityinfo-table-in-advanced-hunting","title":"Changes to the IdentityInfo table in Advanced Hunting","text":"<p>Microsoft Defender XDR services: Changes to the IdentityInfo table in Advanced Hunting IdentityInfo Microsoft Sentinel UEBA reference</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20April%202025/#guest","title":"Guest","text":"<p>Bert-Jan</p> <p>This month we had Bert-Jan back on the show. Bert-Jan gave an inspiring talk on automation, using the various Microsoft Security APIs and creating reports.</p> <p>References:</p> <ul> <li>CISA KEV</li> <li>Device Enrichment</li> <li>SLA</li> <li>New actions: Sentinel-Automation/Report</li> <li>Sentinel Automation</li> <li>Audit Defender XDR Activities</li> <li>Defender XDR Hunting and Detection Rules</li> </ul>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20April%202025/#what-did-you-do-with-kql-this-month","title":"What did you do with KQL this month?","text":""},{"location":"shownotes/2025/KQL%20Cafe%20-%20April%202025/#defender-for-endpoint-identify-portable-apps","title":"Defender for Endpoint - Identify Portable Apps","text":"<p>Auhtor: Alex</p> <pre><code>DeviceFileEvents\n| where parse_json( AdditionalFields).FileType has_any (\"PortableExecutable\")\n| extend FileExtension = parse_path(FolderPath).Extension\n| where FileExtension == \"exe\"\n| project FileName, FolderPath, FileOriginUrl, FileOriginReferrerUrl, AdditionalFields\n| where isnotempty( FileOriginUrl)\n</code></pre> <pre><code>DeviceFileEvents\n| where parse_json( AdditionalFields).FileType has_any (\"PortableExecutable\")\n| extend FileExtension = parse_path(FolderPath).Extension\n| where FileExtension == \"exe\"\n| project FileName, FolderPath, FileOriginUrl, FileOriginReferrerUrl, AdditionalFields\n| where isnotempty( FileOriginUrl)\n| summarize  Files = make_set(FileName), count() by FileOriginReferrerUrl\n</code></pre> <pre><code>DeviceFileEvents\n| where FileOriginReferrerUrl == \"https://portableapps.com/\"\n</code></pre> <pre><code>DeviceProcessEvents\n| where AccountName &lt;&gt; \"system\"\n| where FolderPath matches regex @\"^[A-Z]:\\\\.*$\" // Any drive letter\n    or FolderPath startswith @\"\\\\\" // Network shares\n    or FolderPath matches regex @\"^C:\\\\Users\\\\[^\\\\]+\\\\Downloads\\\\.*$\" // Include C:\\Users\\*\\Downloads\n    or FolderPath matches regex @\"^C:\\\\Users\\\\[^\\\\]+\\\\Desktop\\\\.*$\" // Include C:\\Users\\*\\Desktop\n| where not(FolderPath matches regex @\"^C:\\\\Windows\\\\.*$\") // Exclude C:\\Windows and subfolders\n| where not(FolderPath matches regex @\"^C:\\\\Program Files( \\(x86\\))?\\\\.*$\") // Exclude C:\\Program Files and Program Files (x86)\n| where not(FolderPath matches regex @\"^C:\\\\ProgramData\\\\.*$\") // Exclude C:\\ProgramData\n| where not(AccountSid startswith \"S-1-5-18\") // Exclude Local System Account\n| where not(AccountSid startswith \"S-1-5-20\") // Exclude Network Service Account\n| project TimeGenerated, FileName, FolderPath, AccountName, AccountUpn, ProcessVersionInfoProductName\n</code></pre> <pre><code>DeviceProcessEvents\n| project TimeGenerated, FileName, FolderPath, AccountName, AccountUpn, ProcessVersionInfoInternalFileName, ProcessVersionInfoOriginalFileName, ProcessVersionInfoProductName\n| where ProcessVersionInfoProductName has \"portable\"\n</code></pre> <p>Source</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20April%202025/#defender-for-office-365-identify-non-rfc-compliant-emails","title":"Defender for Office 365 - Identify Non-RFC Compliant Emails","text":"<p>Author: Alex</p> <pre><code>EmailEvents\n| where Timestamp &gt;= ago(90d)\n| where not(SenderFromAddress matches regex @\"^[a-zA-Z0-9.!#$%&amp;'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*$\")\n| project Timestamp,\n          SenderMailFromAddress,\n          SenderFromAddress,\n          Subject,\n          RecipientEmailAddress,\n          DeliveryAction,\n          NetworkMessageId\n| order by Timestamp desc\n| summarize count() by SenderFromAddress\n</code></pre> <p>Source</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20February%202025/","title":"KQL Cafe - February 2025","text":""},{"location":"shownotes/2025/KQL%20Cafe%20-%20February%202025/#recording-and-presentation","title":"Recording and Presentation","text":"<ul> <li>Recording</li> </ul>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20February%202025/#hosts","title":"Hosts","text":"<ul> <li>Gianni</li> <li>Alex</li> </ul>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20February%202025/#guests","title":"Guests","text":"<ul> <li>Uri Barash</li> </ul>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20February%202025/#kql-news","title":"KQL News","text":""},{"location":"shownotes/2025/KQL%20Cafe%20-%20February%202025/#kqlhow","title":"KQL.HOW","text":"<ul> <li>kql.how</li> </ul> <p>This KQL reference contains information on the KQL language. The Guide is updated regularly to reflect the latest changes in Microsoft products. Each documentation part is presented with a syntax, supporting articles and often with examples.</p> <p>While this KQL Guide is a ProBI project created and maintained by Brian B\u00f8nk, it also incorporates official Microsoft documentation to provide you with the most accurate and up-to-date information.</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20February%202025/#monitor-for-new-actions-in-sentinel-and-mde","title":"Monitor For New Actions In Sentinel And MDE","text":"<p>Bert-Jan Pals shared a blog post explaining how to monitor new actions in Microsoft Sentinel and Defender for Endpoint by using a Logic App to generate weekly reports. This proactive solution helps identify potential threats, anomalies, and patterns in the data. The author provides a step-by-step guide to deploying the Logic App, configuring necessary permissions, and adjusting settings for different environments. The solution ensures that organizations stay updated on new actions and maintain robust security monitoring.</p> <ul> <li>Monitor For New Actions In Sentinel And MDE</li> </ul>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20February%202025/#100-days-of-kql","title":"100 Days of KQL","text":"<p>New Year, new challenge? Taking inspiration from Matt Zorich, SecurityAura has started a #100DaysOfKQL. You can find the KQL queries in this GitHub Repo</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20February%202025/#guest","title":"Guest","text":"<ul> <li>Uri Barash Product Management: Kusto, Fabric Real Time Analytics, Azure Data Explorer</li> </ul> <p>Uri provided an introduction with live demos on Microsoft Fabric</p> <ul> <li>Places to submit and vote for feature requests and ideas for Fabric</li> <li>Places to submit and vote for feature requests and ideas for ADX</li> <li>Fabric RTI Roadmap</li> </ul>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20February%202025/#learn-kql","title":"Learn KQL","text":""},{"location":"shownotes/2025/KQL%20Cafe%20-%20February%202025/#sc-200-create-queries-for-microsoft-sentinel-using-kusto-query-language-kql","title":"SC-200: Create queries for Microsoft Sentinel using Kusto Query Language (KQL)","text":"<ul> <li>Construct KQL Statements for Microsoft Sentinel</li> <li>Analyze Query Results Using KQL</li> <li>Build Multi-Table Statements Using KQL</li> <li>Work with Data in Microsoft Sentinel Using Kusto Query Language</li> </ul> <p>Reference</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20February%202025/#basics-for-soc-analysts-from-thomas-brundl","title":"Basics for SOC Analysts from Thomas Br\u00fcndl","text":"<p>Thomas Br\u00fcndl wrote a series of blog posts:</p> <ul> <li>KQL - Basics for SOC - Analysts #1 - Take</li> <li>KQL - Basics for SOC - Analysts #2 \u2013 Search</li> <li>KQL - Basics for SOC - Analysts #3 \u2013 Where</li> <li>KQL - Basics for SOC - Analysts #4 \u2013 Distinct</li> </ul>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20February%202025/#understanding-kql-functions","title":"Understanding KQL Functions","text":"<p>Sarah Lean wrote a blog post about various Kusto Query Language (KQL) functions used to manipulate and analyze data.</p> <ul> <li>Understanding KQL Functions</li> </ul>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20February%202025/#regex","title":"Regex","text":"<p>Gianni talked about RegEx. Below are the kql query examples.</p> <pre><code>DeviceFileEvents\n| where ActionType == \"FileCreated\"\n| where FolderPath matches regex \"WindowsApps\"\n</code></pre> <pre><code>DeviceFileEvents\n| where ActionType == \"FileCreated\"\n| where FolderPath matches regex @\"^C:\\\\\" // StartsWith ^\n</code></pre> <pre><code>DeviceFileEvents\n| where ActionType == \"FileCreated\"\n| where FolderPath matches regex \".exe$\" // EndsWith $ \n</code></pre> <pre><code>DeviceFileEvents\n| where ActionType == \"FileCreated\"\n| where FolderPath matches regex @\"C:\\\\Users\\\\*\\\\\" // 0 or more\n</code></pre> <pre><code>DeviceFileEvents\n| where ActionType == \"FileCreated\"\n| where FolderPath matches regex @\"C:\\\\Users\\\\\\w*\\\\\" // 0 or more\n</code></pre> <pre><code>DeviceFileEvents\n| where ActionType == \"FileCreated\"\n| where FolderPath matches regex @\"C:\\\\Users\\\\[[:alpha:]]*\\\\\" // 0 or more\n</code></pre> <pre><code>DeviceFileEvents\n| where ActionType == \"FileCreated\"\n| where FolderPath matches regex @\"C:\\\\Users\\\\[a-zA-Z]*\\\\\" // 0 or more\n</code></pre> <pre><code>DeviceFileEvents\n| where ActionType == \"FileCreated\"\n| where FolderPath matches regex @\"C:\\\\Users\\\\[a-zA-Z]?\\\\\" // 0 or 1\n</code></pre> <pre><code>DeviceFileEvents\n| where ActionType == \"FileCreated\"\n| where FolderPath matches regex @\"C:\\\\Users\\\\[a-zA-Z]+\\\\\" // 1 or more\n</code></pre> <pre><code>DeviceFileEvents\n| where ActionType == \"FileCreated\"\n| where FolderPath matches regex @\"C:\\\\Users\\\\[a-zA-Z0-9]+\\\\\" // 1 or more\n</code></pre> <pre><code>DeviceFileEvents\n| where ActionType == \"FileCreated\"\n| where FolderPath matches regex @\"C:\\\\Users\\\\[[:alnum:]]+\\\\\" // 1 or more\n</code></pre> <pre><code>DeviceFileEvents\n| where ActionType == \"FileCreated\"\n| where FolderPath matches regex @\"C:\\\\Users\\\\[A-Za-z0-9._\\s@&amp;!\\\\\\-',\u00c0-\u00ff():\\-|\u0430-\u044f\u0410-\u042f\u0451\u0401]+\\\\\" // 1 or more\n</code></pre> <pre><code>DeviceFileEvents\n| where ActionType == \"FileCreated\"\n| where FolderPath matches regex @\"(?i)c:\\\\users\\\\[a-z]+\\\\(documents|pictures|video|musics|favorites)\" // Case insensitive and multiple options\n</code></pre>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20February%202025/#what-did-you-do-with-kql-this-month","title":"What did you do with KQL this month?","text":""},{"location":"shownotes/2025/KQL%20Cafe%20-%20February%202025/#finding-github-repos-used","title":"Finding GitHub repos used","text":"<p>Alex shared the below query. The purpose of this query is to use Defender for Endpoint telemtry data to identify the repositories users have in use. The inspiration for this query came from a customer who had no overview of the repositories in use within their company.</p> <pre><code>DeviceProcessEvents\n| where ProcessCommandLine contains \"git \"\n| extend GitRepo = extract(@\"(https?:\\/\\/[^\\s]+\\.git|https?:\\/\\/[^\\s]+_git\\/[^\\s]+)\", 0, ProcessCommandLine)\n| where isnotempty(GitRepo)\n| project GitRepo, FileName, InitiatingProcessFileName, ProcessCommandLine, AccountUpn, DeviceName\n| summarize Devices = make_set(DeviceName), TotalDevices = dcount(DeviceName), Users = make_set(AccountUpn), TotalUsers = dcount(AccountUpn) by GitRepo\n</code></pre>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20January%202025/","title":"KQL Cafe - January 2025","text":""},{"location":"shownotes/2025/KQL%20Cafe%20-%20January%202025/#recording-and-presentation","title":"Recording and Presentation","text":"<ul> <li>Recording</li> </ul>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20January%202025/#hosts","title":"Hosts","text":"<ul> <li>Gianni</li> <li>Alex</li> </ul>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20January%202025/#guests","title":"Guests","text":"<ul> <li>Ian Hanley</li> </ul>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20January%202025/#kql-news","title":"KQL News","text":""},{"location":"shownotes/2025/KQL%20Cafe%20-%20January%202025/#kql-sources-2025-update-bert-jan-pals","title":"KQL Sources - 2025 Update Bert-Jan Pals","text":"<p>What started as a single blog is now becoming a yearly trend. More and more KQL related repositories are created, not only with a focus on security but also Intune, Entra and Azure Monitor related queries. Dive in and discover how these new additions can help you tackle challenges or give you new ideas for the new year.</p> <p>KQL Sources</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20January%202025/#intune-device-query-kql-queries-ugur-koc","title":"Intune Device Query - KQL Queries - Ugur Koc","text":"<p>This repository contains a comprehensive collection of KQL (Kusto Query Language) queries specifically designed for Microsoft Intune Device Query. These queries are ready to use and cover various aspects of device management, monitoring, and troubleshooting.</p> <p>IntuneDeviceQuery</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20January%202025/#kql-blog-posts-from-morten-thomsen","title":"KQL Blog Posts from Morten Thomsen","text":"<ol> <li>Understanding KQL: The Basics (November 19, 2024)</li> <li>Time-Based Queries and Functions (November 22, 2024)</li> <li>Advanced Filtering Techniques in KQL (November 26, 2024)</li> <li>KQL Variables to Optimize Your Query (November 29, 2024)</li> <li>Visualizing Data with KQL (December 3, 2024)</li> </ol> <p>Blog Posts</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20January%202025/#defender-xdr-advanced-hunting-updates-january-2025","title":"Defender XDR \u2013 Advanced Hunting Updates - January 2025","text":"<p>(Preview) In advanced hunting, Microsoft Defender portal users can now use the adx() operator to query tables stored in Azure Data Explorer. You no longer need to go to log analytics in Microsoft Sentinel to use this operator if you are already in Microsoft Defender.</p> <p>(GA) In advanced hunting, you can now add your frequently used schema tables, functions, queries, and detection rules in the Favorites sections under each tab for quicker access.</p> <p>(Preview) The\u00a0Link to incident\u00a0feature in Microsoft Defender advanced hunting now allows linking of Microsoft Sentinel query results. In both the Microsoft Defender unified experience and in\u00a0Defender XDR advanced hunting, you can now specify whether an entity is an impacted asset or related evidence.</p> <p>Reference</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20January%202025/#defender-for-endpoint-aggregated-reporting","title":"Defender for Endpoint - Aggregated reporting","text":"<p>Aggregated reporting addresses constraints on event reporting in Microsoft Defender for Endpoint. Aggregated reporting extends signal reporting intervals to significantly reduce the size of reported events while preserving essential event properties.</p> <p>Defender for Endpoint reduces noise in collected data to improve the signal-to-noise ratio while balancing product performance and efficiency. It limits data collection to maintain this balance.</p> <p>With aggregated reporting, Defender for Endpoint ensures that all essential event properties valuable to investigation and threat hunting activities are continuously collected. It does this by extended reporting intervals of one hour, which reduces the size of reported events and enables efficient yet valuable data collection.</p> <p>When aggregated reporting is turned on, you can query for a summary of all supported event types, including low-efficacy telemetry, that you can use for investigation and hunting activities.</p> <p>Reference</p> <pre><code>union DeviceFileEvents, DeviceLogonEvents, DeviceNetworkEvents, DeviceProcessEvents\n| where ActionType contains \"Aggregate\"\n| summarize count() by ActionType\n</code></pre>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20January%202025/#living-off-the-tunnels-iocs-jay-kerai","title":"Living Off The Tunnels IOCS - Jay Kerai","text":"<p>Query</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20January%202025/#successful-network-connections-towards-spamhauss-drop-ranges-excluding-common-browsers-as-client-alex-teixeira","title":"Successful network connections towards SpamHaus's DROP ranges, excluding common browsers as client - Alex Teixeira","text":"<p>Query</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20January%202025/#detecting-paste-and-run-malware-with-kql-nathan-webb","title":"Detecting 'Paste and Run' malware with KQL - Nathan Webb","text":"<p>Query</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20January%202025/#guest","title":"Guest","text":"<ul> <li>Ian Hanley on Twitter</li> <li>Ian Hanley on LinkedIn</li> <li>Website</li> <li> <p>Website</p> </li> <li> <p>Workspace Transformation Rules</p> </li> <li>Powerbi &amp; Log Analytics Workspace</li> </ul> <p>You will find many of the queries demonstrated here: KQL Repository</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20January%202025/#learn-kql","title":"Learn KQL","text":""},{"location":"shownotes/2025/KQL%20Cafe%20-%20January%202025/#parse_url-parse_path","title":"Parse_Url &amp; Parse_Path","text":""},{"location":"shownotes/2025/KQL%20Cafe%20-%20January%202025/#what-did-you-do-with-kql-this-month","title":"What did you do with KQL this month?","text":""},{"location":"shownotes/2025/KQL%20Cafe%20-%20January%202025/#azure-devops-security-code-scanning-recommendations","title":"Azure DevOps Security - Code Scanning Recommendations","text":"<p>Query</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20January%202025/#vulnerability-management-from-tvm-to-graph","title":"Vulnerability Management from TVM to Graph","text":"<pre><code>let SeverityTable = datatable(Severity:string,ZeroDay:bool,HasExploit:bool,ExploitVerified:bool,DueDate:timespan,Score:int)\n[\n    \"Critical\",1,1,1,24h,23,  // Critical (10) + ZeroDay (5) + HasExploit (3) + ExploitVerified (5)\n    \"Critical\",0,1,1,24h,18,  // Critical (10) + HasExploit (3) + ExploitVerified (5)\n    \"Critical\",1,0,1,24h,20,  // Critical (10) + ZeroDay (5) + ExploitVerified (5)\n    \"Critical\",0,0,1,24h,15,  // Critical (10) + ExploitVerified (5)\n    \"Critical\",1,1,0,24h,18,  // Critical (10) + ZeroDay (5) + HasExploit (3)\n    \"Critical\",0,1,0,24h,13,  // Critical (10) + HasExploit (3)\n    \"Critical\",1,0,0,24h,15,  // Critical (10) + ZeroDay (5)\n    \"Critical\",0,0,0,48h,10,  // Critical (10)\n    \"High\",1,1,1,3d,21,       // High (8) + ZeroDay (5) + HasExploit (3) + ExploitVerified (5)\n    \"High\",0,1,1,3d,16,       // High (8) + HasExploit (3) + ExploitVerified (5)\n    \"High\",1,0,1,3d,18,       // High (8) + ZeroDay (5) + ExploitVerified (5)\n    \"High\",0,0,1,5d,13,       // High (8) + ExploitVerified (5)\n    \"High\",1,1,0,5d,16,       // High (8) + ZeroDay (5) + HasExploit (3)\n    \"High\",0,1,0,7d,11,       // High (8) + HasExploit (3)\n    \"High\",1,0,0,7d,13,       // High (8) + ZeroDay (5)\n    \"High\",0,0,0,10d,8,       // High (8)\n    \"Medium\",1,1,1,15d,18,    // Medium (5) + ZeroDay (5) + HasExploit (3) + ExploitVerified (5)\n    \"Medium\",0,1,1,15d,13,    // Medium (5) + HasExploit (3) + ExploitVerified (5)\n    \"Medium\",1,0,1,20d,15,    // Medium (5) + ZeroDay (5) + ExploitVerified (5)\n    \"Medium\",0,0,1,20d,10,    // Medium (5) + ExploitVerified (5)\n    \"Medium\",1,1,0,30d,13,    // Medium (5) + ZeroDay (5) + HasExploit (3)\n    \"Medium\",0,1,0,45d,8,     // Medium (5) + HasExploit (3)\n    \"Medium\",1,0,0,45d,10,    // Medium (5) + ZeroDay (5)\n    \"Medium\",0,0,0,60d,5,     // Medium (5)\n    \"Low\",1,1,1,30d,14,       // Low (3) + ZeroDay (5) + HasExploit (3) + ExploitVerified (3)\n    \"Low\",0,1,1,45d,9,        // Low (3) + HasExploit (3) + ExploitVerified (3)\n    \"Low\",1,0,1,60d,11,       // Low (3) + ZeroDay (5) + ExploitVerified (3)\n    \"Low\",0,0,1,90d,6,        // Low (3) + ExploitVerified (3)\n    \"Low\",1,1,0,90d,11,       // Low (3) + ZeroDay (5) + HasExploit (3)\n    \"Low\",0,1,0,90d,6,        // Low (3) + HasExploit (3)\n    \"Low\",1,0,0,90d,8,        // Low (3) + ZeroDay (5)\n    \"Low\",0,0,0,120d,3,       // Low (3)\n    \"None\",1,1,1,60d,12,      // None (1) + ZeroDay (5) + HasExploit (3) + ExploitVerified (3)\n    \"None\",0,1,1,90d,7,       // None (1) + HasExploit (3) + ExploitVerified (3)\n    \"None\",1,0,1,120d,9,      // None (1) + ZeroDay (5) + ExploitVerified (3)\n    \"None\",0,0,1,180d,4,      // None (1) + ExploitVerified (3)\n    \"None\",1,1,0,180d,9,      // None (1) + ZeroDay (5) + HasExploit (3)\n    \"None\",0,1,0,180d,4,      // None (1) + HasExploit (3)\n    \"None\",1,0,0,180d,6,      // None (1) + ZeroDay (5)\n    \"None\",0,0,0,365d,1       // None (1)\n];\nExposureGraphEdges\n| make-graph SourceNodeId --&gt; TargetNodeId with ExposureGraphNodes on NodeId\n| graph-match cycles=none (CVE)-[affecting]-&gt;(Device)-[loggedonusers*1..3]-&gt;(User)\n    where CVE.NodeLabel == \"Cve\" and \n    affecting.EdgeLabel == \"affecting\" and\n//    not (Device.NodeProperties.rawData.sensorHealthState in(\"InactiveGoneDark\",\"InactiveRecent\")) and\n    loggedonusers.EdgeLabel in(\"has credentials of\", \"frequently logged in by\") and\n    User.NodeLabel in(\"user\",\"serviceprincipal\")\n    project \n        CveId = CVE.NodeName, \n            Severity = tostring(CVE.NodeProperties.rawData.severity),\n            ZeroDay = tobool(CVE.NodeProperties.rawData.isZeroDay),\n            HasExploit = tobool(CVE.NodeProperties.rawData.hasExploit),\n            ExploitVerified = tobool(CVE.NodeProperties.rawData.isExploitVerified),\n            LastModifiedDate = todatetime(CVE.NodeProperties.rawData.lastModifiedDate),\n            CvssScore = todouble(tostring(CVE.NodeProperties.rawData.cvssScore)),\n        DeviceName = Device.NodeName,\n            FirstSeenByInventory = todatetime(Device.NodeProperties.rawData.firstSeenByInventory),\n            LastSeen = todatetime(Device.NodeProperties.rawData.lastSeen),\n            EntityIds = Device.EntityIds,\n            SensorHealthState = tostring(Device.NodeProperties.rawData.sensorHealthState),\n            MachineGroup = tostring(Device.NodeProperties.rawData.machineGroup),\n            OsPlatformFriendlyName = tostring(Device.NodeProperties.rawData.osPlatformFriendlyName),\n            OsVersionFriendlyName = tostring(Device.NodeProperties.rawData.osVersionFriendlyName),\n            PublicIP = tostring(Device.NodeProperties.rawData.publicIP),\n            IsInternetFacing = tobool(Device.NodeProperties.rawData.isInternetFacing),\n            ManualCriticalityLevel = tostring(Device.NodeProperties.rawData.manualCriticalityLevel),\n            DeviceRegistryTags = tostring(Device.NodeProperties.rawData.deviceRegistryTags),\n        User = User.NodeName\n| lookup SeverityTable on Severity, ZeroDay, HasExploit, ExploitVerified\n| extend RemeditationExpired = iif(LastModifiedDate + DueDate &lt; now(),1,0)\n| where RemeditationExpired == 1\n| parse EntityIds with * 'SenseDeviceId\",\"id\":\"' DeviceId '\"' *\n| project-away EntityIds\n| join hint.shufflekey=DeviceId kind=inner (DeviceTvmSoftwareVulnerabilities | project-keep DeviceId, CveId, SoftwareVendor, SoftwareName, SoftwareVersion) on DeviceId, CveId\n| project-away *1\n| join hint.shufflekey=DeviceId kind=leftouter (DeviceTvmSoftwareEvidenceBeta) on DeviceId, SoftwareVendor, SoftwareName, SoftwareVersion\n| project-away *1\n| extend Information = bag_pack_columns(CvssScore, SoftwareVendor, SoftwareName, SoftwareVersion, RegistryPaths, DiskPaths)\n| summarize hint.shufflekey=DeviceId Score = sum(Score), CVEs = dcount(CveId), ImportantCVEs = countif(Score &gt;= 13), Evidence = make_set(Information) by FirstSeenByInventory, LastSeen, DeviceId, DeviceName, ManualCriticalityLevel, SensorHealthState, MachineGroup, OsPlatformFriendlyName, OsVersionFriendlyName, PublicIP, IsInternetFacing, DeviceRegistryTags\n| extend EvidenceCount = array_length(Evidence)\n</code></pre>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20January%202025/#mfa-fraud-alert-retirement-report-suspicious-activity","title":"MFA Fraud Alert Retirement -&gt; Report Suspicious Activity","text":"<p>Microsoft is retiring the MFA Fraud alert in favor of the replacement feature \"Report Suspicious Activity\" here's a KQL query to detect these events.</p> <p>Query</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20January%202025/#entra-id-self-service-password-reset-configuration-changes","title":"Entra ID - Self Service Password Reset - Configuration Changes","text":"<p>Microsoft has introduced enhanced logging capabilities for Self-Service Password Reset (SSPR) policy configurations. With this update, any change made to the SSPR policy configuration\u2014including enablement, disablement, or modifications\u2014will generate an audit log entry detailing the change.</p> <p>Query</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20June%202025/","title":"KQL Cafe - June 2025","text":""},{"location":"shownotes/2025/KQL%20Cafe%20-%20June%202025/#recording","title":"Recording","text":"<p>Watch on YouTube</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20June%202025/#hosts","title":"Hosts","text":"<ul> <li>Gianni</li> <li>Alex</li> </ul>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20June%202025/#guests","title":"Guests","text":"<ul> <li>Thomas Naunheim</li> </ul>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20June%202025/#kql-news","title":"KQL News","text":""},{"location":"shownotes/2025/KQL%20Cafe%20-%20June%202025/#microsoft-defender-for-office-365-two-new-data-tables-in-advanced-hunting-preview","title":"Microsoft Defender for Office 365: Two new data tables in Advanced hunting (preview)","text":"<p>Microsoft Defender for Office 365 is introducing two new data tables, CampaignInfo and FileMaliciousContentInfo, in Advanced hunting. Public Preview starts in early June 2025, with General Availability in early July 2025. These tables will help SOC teams investigate email campaigns and malicious files. No admin action is required.</p> <p>Reference</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20June%202025/#kql-benchmark-dashboard","title":"KQL Benchmark Dashboard","text":"<p>Comprehensive AI evaluation framework testing large language models' ability to generate cybersecurity detection rules using real-world attack scenarios</p> <ul> <li>KQLBench</li> </ul>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20June%202025/#detecting-vulnerable-drivers-aka-loldrivers-the-right-way-using-microsoft-defender-for-endpoint","title":"Detecting Vulnerable Drivers (a.k.a. LOLDrivers) the Right Way Using Microsoft Defender for Endpoint","text":"<p>Blog</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20June%202025/#top-10-kql-queries-every-detection-engineer-should-know","title":"Top 10 KQL Queries Every Detection Engineer Should Know","text":"<p>By Sergio Albea</p> <ol> <li>Detecting Potential DLL Hijacking Cases</li> <li>Identify differences between EntraID user phone number &amp; its MFA authentication number</li> <li>Identify communication at risk due to encryption algorithm ciphers in use</li> <li>Anonymous access to files by Suspicious IP Addresses</li> <li>Identifying methods used to establish secure communication over insecure channels</li> <li>Suspicious SSH connection inspections</li> <li>Detect PnP devices connected to your endpoint machines</li> <li>Classifying HTTP status codes pivot table query</li> <li>Spotting malicious ISPs through activity monitoring</li> <li>Devices with External RDP Connections</li> </ol> <p>Blog</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20June%202025/#understanding-query-performance-in-kusto-beyond-results-to-resource-insights","title":"Understanding Query Performance in Kusto: Beyond Results to Resource Insights","text":"<p>By Henning Rauch</p> <p>Blog</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20June%202025/#guest-thomas-naunheim","title":"Guest Thomas Naunheim","text":"<p>Thomas Naunheim</p> <p>EntraOps Classification and Automation</p> <ul> <li>EntraOps Classification Files</li> <li>Community Project \u201cEntraOps\u201d</li> </ul> <p>Session about Thomas\u2019 Enterprise Access Model</p> <ul> <li>\u201cDefending Tier 0: Taking Control of Your Cloud's Control Plane\u201d</li> </ul> <p>KQL Functions</p> <ul> <li>PrivilegedIdentityInfo</li> <li>WorkloadIdentityInfoXdr</li> <li>UnifiedIdentityInfoXdr</li> </ul> <p>Hunting Queries</p> <ul> <li>SensitiveMicrosoftGraphDelegatedPermissionAccess</li> <li>SummaryOfPrivilegedOperationsByDirectoryRoleMember</li> <li>RecentAddedPrivileges</li> </ul>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20June%202025/#learn-kql","title":"Learn KQL","text":""},{"location":"shownotes/2025/KQL%20Cafe%20-%20June%202025/#what-did-you-do-with-kql-this-month","title":"What did you do with KQL this month?","text":""},{"location":"shownotes/2025/KQL%20Cafe%20-%20June%202025/#microsoft-office-365-version-history-information","title":"Microsoft Office 365 - Version History Information","text":"<p>By Alex</p> <p>Use this KQL query to retreive information about your Microsoft Office installations across MDE managed devices. The query joins endpoint inventory data with public Office update history feed data. The query extend the MDE Software Inventory data with the following information:</p> <ul> <li>Office deployment Channel</li> <li>Release Date</li> <li>The total # of months the release was supported until its EOS date</li> <li>The total of months since the release of the appropriate version.</li> </ul> <pre><code>let officeversionhistory = (externaldata(ReleaseDate:datetime , Channel:string, Version:string,Build:string)[@'https://raw.githubusercontent.com/alexverboon/Feeds/refs/heads/main/data/office_update_history_2018-present.csv']\nwith (format=\"csv\", ignoreFirstRecord=true));\nDeviceTvmSoftwareInventory\n| where SoftwareVendor contains \"microsoft\"\n| where SoftwareName == 'office'\n| project DeviceName, SoftwareName, SoftwareVersion, EndOfSupportDate, EndOfSupportStatus\n| extend Shortbuild = strcat_array(array_slice(split(SoftwareVersion, \".\"), 2, -1), \".\")\n| extend EndOfSupportDate = todatetime(format_datetime(EndOfSupportDate, 'yyyy-MM-dd'))\n| join kind=leftouter (officeversionhistory\n| extend ReleaseDate = todatetime(format_datetime(ReleaseDate, 'yyyy-MM-dd'))\n)\non $left. Shortbuild == $right.Build\n| extend MnthsSupported = datetime_diff('month', EndOfSupportDate, ReleaseDate)\n| extend MonthsSinceRelease = datetime_diff('month',now(),ReleaseDate)\n| summarize TotalDevices = dcount(DeviceName,4) by SoftwareName, SoftwareVersion, EndOfSupportDate,EndOfSupportStatus, Shortbuild, ReleaseDate,Channel, Version, Build,MnthsSupported,MonthsSinceRelease\n</code></pre> <p>Reference</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20June%202025/#entraid-privileged-identity-management-role-settings-changes","title":"EntraID - Privileged Identity Management - Role Settings Changes","text":"<p>By Alex</p> <p>Use the below query to retrieve EntraID - Privileged Identity Management - Role &amp; Group Settings Changes</p> <pre><code>AuditLogs\n| where Category == \"RoleManagement\" or Category == \"GroupManagement\"\n| where OperationName == \"Update role setting in PIM\"\n| extend userPrincipalName = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\n| extend Role = case(\n    Category == 'RoleManagement',tostring(TargetResources[0].displayName),\n    \"\")\n| extend Group = case(\n    Category  == \"GroupManagement\", tostring(TargetResources[2].displayName),\n    \"\")\n| mv-apply item = AdditionalDetails on (\n    where tostring(item.key) == \"ipaddr\"\n    | extend ipaddr = tostring(item.value)\n    )\n| extend geo_ip = tostring(geo_info_from_ip_address(ipaddr))\n| sort by TimeGenerated asc \n| sort by TimeGenerated asc \n| extend ChangedSettings = replace(\"Setting changes in this session: \", \"\", tostring(ResultReason))\n| extend ModifiedSettings = extract_all(@\"(.*?)\\.\", ChangedSettings)\n| project-away ChangedSettings\n| project\n    TimeGenerated,\n    Role,\n    Group,\n    ResultReason,\n    ModifiedSettings,\n    userPrincipalName,\n    Identity,\n    ipaddr,\n    geo_ip,\n    CorrelationId\n</code></pre> <p>Reference</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20March%202025/","title":"KQL Cafe - March 2025","text":""},{"location":"shownotes/2025/KQL%20Cafe%20-%20March%202025/#recording-and-presentation","title":"Recording and Presentation","text":"<ul> <li>Recording</li> </ul>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20March%202025/#hosts","title":"Hosts","text":"<ul> <li>Gianni</li> <li>Alex</li> </ul>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20March%202025/#guests","title":"Guests","text":"<ul> <li>Sergio Albea</li> </ul>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20March%202025/#kql-news","title":"KQL News","text":""},{"location":"shownotes/2025/KQL%20Cafe%20-%20March%202025/#documenting-kql-queries","title":"Documenting KQL Queries","text":"<p>Here's a blog post from Sarah about documeting KQL queries.</p> <p>Read here</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20March%202025/#kql-detection-template","title":"KQL Detection Template","text":"<p>If you're creating detections, and are looking for a template, check out Bert-Jan Pals template here</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20March%202025/#kusto-detective-agency-s03","title":"Kusto Detective Agency S03","text":"<p>The Kusto Detective Agency is back with a new challenge. Start here</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20March%202025/#identityinfo-table-entra-id-eligible-roles","title":"IdentityInfo Table \u2013 Entra ID \u2013 eligible Roles","text":"<p>The IdentityInfo table in hashtag#MicrosoftDefender XDR has been expanded to include eligible roles from hashtag#MicrosoftEntra managed by Privileged Identity Management (PIM).</p> <p>Thomas Naunheim has developed a hashtag#KQL function that generates a summarized overview of all directory role assignments, enriched with details from his #EntraOps classification and role definitions. This function is available from his GitHub repo</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20March%202025/#new-cybersecurity-functions","title":"New Cybersecurity Functions","text":"<p>Over the past weeks, we've seen the following functions added.</p> Function Name Description detect_anomalous_new_entity_fl() Detect the appearance of anomalous new entities in timestamped data. detect_anomalous_spike_fl() Detect the appearance of anomalous spikes in numeric variables in timestamped data. graph_blast_radius_fl() Calculate the Blast Radius (list and score) of source nodes over path or edge data. graph_exposure_perimeter_fl() Calculate the Exposure Perimeter (list and score) of target nodes over path or edge data. graph_path_discovery_fl() Discover valid paths between relevant endpoints (sources and targets) over graph data."},{"location":"shownotes/2025/KQL%20Cafe%20-%20March%202025/#confgratulations-slimkql-hunting-queries-and-detection-rules","title":"Confgratulations - \ud835\udde6\ud835\uddf9\ud835\uddf6\ud835\uddfa\ud835\uddde\ud835\udde4\ud835\udddf \ud835\udddb\ud835\ude02\ud835\uddfb\ud835\ude01\ud835\uddf6\ud835\uddfb\ud835\uddf4 \ud835\udde4\ud835\ude02\ud835\uddf2\ud835\uddff\ud835\uddf6\ud835\uddf2\ud835\ude00 \ud835\uddee\ud835\uddfb\ud835\uddf1 \ud835\uddd7\ud835\uddf2\ud835\ude01\ud835\uddf2\ud835\uddf0\ud835\ude01\ud835\uddf6\ud835\uddfc\ud835\uddfb \ud835\udde5\ud835\ude02\ud835\uddf9\ud835\uddf2\ud835\ude00","text":"<p>Steven Limm GitHub repository, launched in August 2024, has officially achieved \"\ud835\udde6\ud835\uddf6\ud835\uddf9\ud835\ude03\ud835\uddf2\ud835\uddff\" starstruck status!</p> <p>Congratulations!!!</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20March%202025/#guest","title":"Guest","text":""},{"location":"shownotes/2025/KQL%20Cafe%20-%20March%202025/#detecting-suspicious-isps-with-kql-understanding-isp-behavior-for-better-threat-detection","title":"Detecting Suspicious ISPs with KQL \u2013 Understanding ISP behavior for better threat detection*","text":"<ul> <li>Sergio Albea</li> <li>SCKIPT</li> <li>Threat Hunting Queries</li> </ul> <p>ISP/ASN Detection</p> <pre><code>let CIDRASN = \n    externaldata(CIDR:string, CIDRASN:int, CIDRASNName:string)\n    [\"https://firewalliplists.gypthecat.com/lists/kusto/kusto-cidr-asn.csv.zip\"]\n    with (ignoreFirstRecord=true);\nlet Malicious_ASN = \n    externaldata(asn:string)\n    [\"https://www.spamhaus.org/drop/asndrop.json\"]\n    with (format=\"multijson\");\nEmailEvents\n| evaluate ipv4_lookup(CIDRASN, SenderIPv4, CIDR, return_unmatched=true)\n| extend GeoIPData = geo_info_from_ip_address(SenderIPv4)\n| where isnotempty(CIDR)\n| extend asn_info = tostring(CIDRASN)\n| where DeliveryLocation has \"Inbox\"\n| join kind=inner (Malicious_ASN) on $left.asn_info == $right.asn\n| project Timestamp,\n          SenderFromAddress,\n          SenderMailFromAddress,\n          SenderDisplayName,\n          SenderMailFromDomain,\n          SenderIPv4,\n          RecipientEmailAddress,\n          Subject,\n          DeliveryAction,\n          DeliveryLocation,\n          ThreatTypes,\n          CIDR,\n          CIDRASNName,\n          asn_info,\n          asn\n</code></pre> <p>ISP Activity based on sign-in attemps</p> <pre><code>IdentityLogonEvents\n| where Timestamp &gt; ago(30d)\n| project ISP, Location, IPAddress, FailureReason\n| summarize \n    Different_IPs = dcount(IPAddress),\n    valid         = countif(isempty(FailureReason) or FailureReason contains \"Success\"),\n    failure       = countif(isnotempty(FailureReason) and FailureReason !contains \"Success\"),\n    IPs           = make_set(IPAddress)\n  by ISP, Location\n| order by failure\n| where valid == 0 and failure &gt; 5\n</code></pre> <p>ISP Activity Detection using email threats</p> <pre><code>let CIDRASN = \n    externaldata(CIDR:string, CIDRASN:int, CIDRASNName:string)\n    [ \n        \"https://firewalliplists.gypthecat.com/lists/kusto/kusto-cidr-asn.csv.zip\" \n    ]\n    with (ignoreFirstRecord=true);\nEmailEvents\n| evaluate ipv4_lookup(CIDRASN, SenderIPv4, CIDR, return_unmatched=true)\n| extend GeoIPData = tostring(geo_info_from_ip_address(SenderIPv4).country)\n| summarize\n    Different_IPs          = make_set(SenderIPv4),\n    Countries              = make_set(GeoIPData),\n    set_CIDR               = make_set(CIDR),\n    set_SenderFromDomain   = make_set(SenderFromDomain),\n    Distinct_IPs           = dcount(SenderIPv4),\n    set_ThreatTypes        = make_set(ThreatTypes),\n    Delivered_on_Inbox     = countif(DeliveryLocation has \"Inbox/folder\"),\n    Email_Threat           = countif(isnotempty(ThreatTypes)),\n    Total_emails           = count(),\n    Email_Valid            = countif(isempty(ThreatTypes))\n  by CIDR, CIDRASNName, CIDRASN\n| extend \n    SuspiciousRatio        = Email_Threat * 1.0 / Total_emails,\n    SuspiciousPercentage   = SuspiciousRatio * 100,\n    ValidRatio             = Email_Valid * 1.0 / Total_emails,\n    ValidPercentage        = ValidRatio * 100\n| where SuspiciousPercentage == 100\n| project\n    CIDRASNName,\n    set_SenderFromDomain,\n    Countries,\n    Distinct_IPs,\n    set_ThreatTypes,\n    Total_emails,\n    Delivered_on_Inbox,\n    Email_Threat,\n    Email_Valid,\n    SuspiciousPercentage,\n    ValidPercentage\n</code></pre>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20March%202025/#learn-kql","title":"Learn KQL","text":""},{"location":"shownotes/2025/KQL%20Cafe%20-%20March%202025/#set_intersect-and-set_difference","title":"set_intersect and set_difference","text":"<p>Learn from a practical example how to use set_intersect and set_difference</p> <pre><code>set query_now = datetime(\"Mar 17, 2025 6:00:25 PM\");\nIdentityLogonEvents\n| where ActionType == \"LogonSuccess\"\n| where isnotempty(TargetDeviceName)\n| summarize Sources = make_set(DeviceName), Destinations = make_set(TargetDeviceName) by AccountSid, bin(Timestamp, 1d)\n| extend JumpHost = set_intersect(Sources, Destinations)\n| extend Source = set_difference(Sources, JumpHost)[0]\n| extend Destination = set_difference(Destinations, JumpHost)[0]\n| extend Path = strcat(Source, \" =&gt; \", JumpHost[0], \u00a0\" =&gt; \", Destination)\n</code></pre>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20March%202025/#what-did-you-do-with-kql-this-month","title":"What did you do with KQL this month?","text":""},{"location":"shownotes/2025/KQL%20Cafe%20-%20March%202025/#command-lines-by-incident","title":"Command lines by incident","text":"<p>Gianni's kql query for extracting commandlines</p> <pre><code>SecurityIncident\n| where ProviderIncidentId == \"1013\"\n| join kind=inner (\n    SecurityAlert\n    | extend EP = parse_json(ExtendedProperties)\n    | extend ProviderIncidentId = tostring(EP.IncidentId)\n    | where isnotempty(ProviderIncidentId)\n    | summarize arg_max(TimeGenerated, *) by VendorOriginalId\n    )\n    on ProviderIncidentId\n| extend ET = parse_json(Entities)\n| mv-expand ET\n| where ET contains \"CommandLine\"\n| extend CommandLine = tostring(ET.CommandLine)\n| extend parse_path(CommandLine)\n| evaluate bag_unpack(Column1)\n| summarize make_set(CommandLine) by ProviderIncidentId, Title, Severity\n</code></pre>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20March%202025/#azure-devops-repositories","title":"Azure DevOps - Repositories","text":"<p>Alex's query to identify Azure DevOps repositories.</p> <pre><code>ExposureGraphNodes \n| where NodeLabel == @\"azuredevopsrepository\"\n| extend Subscription = parse_json(EntityIds)[0][\"id\"]\n| extend URL = parse_json(EntityIds)[1][\"id\"]\n| parse Subscription with \n    \"/subscriptions/\" subscription_id \n    \"/resourcegroups/\" resource_group \n    \"/providers/microsoft.security/securityconnectors/\" * \n    \"/devops/default/azuredevopsorgs/\" azure_devops_org \n       \"/projects/\" project_name \"/repos/\" repo_name\n| project NodeName, Subscription, URL,subscription_id, resource_group, azure_devops_org, project_name, repo_name\n</code></pre>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20May%202025/","title":"KQL Cafe - May 2025","text":""},{"location":"shownotes/2025/KQL%20Cafe%20-%20May%202025/#recording","title":"Recording","text":"<ul> <li>Recording</li> </ul>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20May%202025/#hosts","title":"Hosts","text":"<ul> <li>Gianni</li> <li>Alex</li> </ul>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20May%202025/#guests","title":"Guests","text":"<ul> <li>Michalis Michalos</li> <li>Christos Galanopoulos</li> </ul>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20May%202025/#kql-news","title":"KQL News","text":""},{"location":"shownotes/2025/KQL%20Cafe%20-%20May%202025/#introducing-new-advanced-hunting-tables-to-hunt-on-teams-messages-and-urls","title":"Introducing new Advanced Hunting Tables to hunt on Teams messages and URLs","text":"<p>Microsoft introduces three new Advaned Hunting tables designed to hunt for Teams messages containing URLs within the organization.</p> Table\u00a0Name Description MessageEvents The <code>MessageEvents</code> table enables hunting across Teams messages containing URLs within your tenant. This includes both known-malicious messages blocked immediately after delivery and messages with no malicious content. Each message is uniquely identified by the <code>TeamsMessageId</code>, which you can use to join across tables. Because only a single copy of each message exists\u2014even if it was delivered to multiple recipients\u2014only one instance is shown in Advanced Hunting. MessagePostDeliveryEvents The <code>MessagePostDeliveryEvents</code> table lets you analyze Teams messages containing URLs that are identified as malicious after delivery. If Zero-hour Auto Purge (ZAP) is enabled for Teams, messages blocked post-delivery appear in this table. Each message is uniquely identified by the <code>TeamsMessageId</code>. MessageURLInfo The <code>MessageURLInfo</code> table supports hunting across URLs embedded within Teams messages in your organization. <ul> <li>Message Center</li> </ul>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20May%202025/#guest","title":"Guest","text":"<ul> <li>Michalis Michalos</li> <li>Blog</li> <li>Christos Galanopoulos</li> </ul>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20May%202025/#skaleql","title":"sKaleQL","text":"<p>Michalis &amp; Christos presented their sKaleQL project.</p>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20May%202025/#what-did-you-do-with-kql-this-month","title":"What did you do with KQL this month?","text":""},{"location":"shownotes/2025/KQL%20Cafe%20-%20May%202025/#pack-in-defender","title":"Pack in Defender","text":"<pre><code>AlertEvidence\n| where EntityType == \"Ip\"\n| extend IPObject = pack(\"Title\", Title, \"RemoteIP\", RemoteIP)\n| summarize ListIPs = make_list(IPObject), Records = count() by AlertId, Timestamp\n| project Timestamp, AlertId, ListIPs, Records\n</code></pre> <pre><code>AlertEvidence\n| where EntityType == \"Process\"\n| extend FileObject = pack(\"Title\", Title, \"FileName\", FileName, \"SHA1\", SHA1, \"ProcessCommandLine\", ProcessCommandLine)\n| summarize ListFiles = make_list(FileObject), Records = count() by AlertId, Timestamp\n| project Timestamp, AlertId, ListFiles, Records\n</code></pre>"},{"location":"shownotes/2025/KQL%20Cafe%20-%20May%202025/#detecting-malicious-powershell","title":"Detecting malicious PowerShell","text":"<pre><code>DeviceNetworkEvents\n| where not(ActionType == \"ConnectionFailed\")\n| where not(ipv4_is_private(RemoteIP) and ipv6_is_in_any_range(RemoteIP, @\"::1/128\",@\"ff00::/8\",\"fe80::/10\", \"fc00::/7\"))\n| where InitiatingProcessParentFileName =~ \"powershell.exe\"\n| join kind=inner (DeviceProcessEvents) on DeviceId, $left.InitiatingProcessParentFileName == $right.InitiatingProcessFileName, $left.InitiatingProcessParentId == $right.InitiatingProcessId\n| where InitiatingProcessCommandLine1 has_any (\n\u00a0 \u00a0 \"-w h\",\"-w hi\",\"-w hid\",\"-w hidd\",\"-w hidde\",\"-w hidden\",\n\u00a0 \u00a0 \"-wi h\",\"-wi hi\",\"-wi hid\",\"-wi hidd\",\"-wi hidde\",\"-wi hidden\",\n\u00a0 \u00a0 \"-win h\",\"-win hi\",\"-win hid\",\"-win hidd\",\"-win hidde\",\"-win hidden\",\n\u00a0 \u00a0 \"-wind h\",\"-wind hi\",\"-wind hid\",\"-wind hidd\",\"-wind hidde\",\"-wind hidden\",\n\u00a0 \u00a0 \"-windo h\",\"-windo hi\",\"-windo hid\",\"-windo hidd\",\"-windo hidde\",\"-windo hidden\",\n\u00a0 \u00a0 \"-window h\",\"-window hi\",\"-window hid\",\"-window hidd\",\"-window hidde\",\"-window hidden\",\n\u00a0 \u00a0 \"-windows h\",\"-windows hi\",\"-windows hid\",\"-windows hidd\",\"-windows hidde\",\"-windows hidden\",\n\u00a0 \u00a0 \"-windowst h\",\"-windowst hi\",\"-windowst hid\",\"-windowst hidd\",\"-windowst hidde\",\"-windowst hidden\",\n\u00a0 \u00a0 \"-windowsty h\",\"-windowsty hi\",\"-windowsty hid\",\"-windowsty hidd\",\"-windowsty hidde\",\"-windowsty hidden\",\n\u00a0 \u00a0 \"-windowstyl h\",\"-windowstyl hi\",\"-windowstyl hid\",\"-windowstyl hidd\",\"-windowstyl hidde\",\"-windowstyl hidden\",\n\u00a0 \u00a0 \"-windowstyle h\",\"-windowstyle hi\",\"-windowstyle hid\",\"-windowstyle hidd\",\"-windowstyle hidde\",\"-windowstyle hidden\"\n)\nDeviceNetworkEvents\n| where not(ActionType == \"ConnectionFailed\")\n| where not(ipv4_is_private(RemoteIP) and ipv6_is_in_any_range(RemoteIP, @\"::1/128\",@\"ff00::/8\",\"fe80::/10\", \"fc00::/7\"))\n| where InitiatingProcessParentFileName =~ \"powershell.exe\"\n| join kind=inner (DeviceProcessEvents) on DeviceId, $left.InitiatingProcessParentFileName == $right.InitiatingProcessFileName, $left.InitiatingProcessParentId == $right.InitiatingProcessId\n| where InitiatingProcessCommandLine1 matches regex @\"(?i)-wi?n?d?o?w?s?t?y?l?e? hi?d?d?e?n?\"\n</code></pre>"}]}